<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[折腾来折腾去]]></title>
  <link href="http://pikipity.github.io/atom.xml" rel="self"/>
  <link href="http://pikipity.github.io/"/>
  <updated>2013-01-30T00:00:00+08:00</updated>
  <id>http://pikipity.github.io/</id>
  <author>
    <name><![CDATA[pikipity]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[《肖申克的救赎》删减片段]]></title>
    <link href="http://pikipity.github.io/blog/remove-part-of-the-shawshank-redemption.html"/>
    <updated>2013-11-24T09:12:00+08:00</updated>
    <id>http://pikipity.github.io/blog/remove-part-of-the-shawshank-redemption</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-i__KzNHZXUk/UpFUwKlq5yI/AAAAAAAABXs/cmnWExXIYeg/s512/414px-Shawshank_Redemption_ver1.jpg" alt="《肖申克的救赎》海报" /></p>

<p>《肖申克的救赎》是我最喜欢的影片之一了，下面是一段《肖申克的救赎》导演及主演的采访片段，介绍两段电影中被删减的片段，分别是关于瑞德出狱之后生活的片段（更加明白的了解，为什么出狱后的人们会纷纷选择自杀，为什么瑞德会开始寻找波兰特）和波兰特越狱后狱警寻找波兰特（波兰特的越狱路线远没有想象中的简单）和瑞德的表现。</p>

<iframe height="498" width="510" src="http://player.youku.com/embed/XNjM3Njc3NTA4" frameborder="0" allowfullscreen=""></iframe>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[游戏大集合 -- Rabbit Rush]]></title>
    <link href="http://pikipity.github.io/blog/rabbit-rush.html"/>
    <updated>2013-11-19T09:56:00+08:00</updated>
    <id>http://pikipity.github.io/blog/rabbit-rush</id>
    <content type="html"><![CDATA[<p>推荐一款游戏 – “Rabbit Rush”，小游戏？解密？Galgame？文字游戏？Too young Too simple。这个游戏将各个种类的游戏融合在一起，剧情慢慢地一点点展开，不要心急。制作很精良，很难想象初稿只不过是 RMIT 的学生的小项目而已。</p>

<p>官方网站在<a href="http://www.rabbit-rush.com/">这里</a>，免费下载，支持 Windows 和 Mac。</p>

<p>下面是一段官方视频，本来是 Youtube 上的，搬运到了 Youku 上，不要被视频欺骗，那只是故事的开始而已。</p>

<iframe height="498" width="510" src="http://player.youku.com/embed/XNjM2NjU5ODMy" frameborder="0" allowfullscreen=""></iframe>

<p>自己懒得玩的，可以看看 B 站谜叔的实况，我想看完之后就会想玩了吧。</p>

<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=841121&amp;page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[3D PUMA 机器人手臂演示（by Don Riley）]]></title>
    <link href="http://pikipity.github.io/blog/3d-puma-demo.html"/>
    <updated>2013-11-17T16:36:00+08:00</updated>
    <id>http://pikipity.github.io/blog/3d-puma-demo</id>
    <content type="html"><![CDATA[<p>最近需要用 MATLAB 制作一个 3D 的机器人手臂演示，于是就去网上搜索了一下，在 <a href="http://www.mathworks.com/matlabcentral/fileexchange">MATLAB Center</a> 找到了一个 3D PUMA 机器人手臂非常好的演示软件。第一，制作很精良，可以任意调整每个关节的角度，可以画出移动轨迹，并有一个绘制螺旋的 Demo；第二，文件本身清晰易懂。这简直就是学习的完美教程。此演示文件可以到<a href="http://www.mathworks.com/matlabcentral/fileexchange/14932-3d-puma-robot-demo">这里</a>下载。下面是我录制的一段此文件运行的视频。</p>

<iframe height="498" width="700" src="http://player.youku.com/embed/XNjM1OTM4NjA4" frameborder="0" allowfullscreen=""></iframe>

<p>唯一的缺点就是，作者 Don Riley 并没有给出其是如何构建模型的。于是我去<a href="http://www.mathworks.com/matlabcentral/fileexchange/authors/1558">他的主页</a>看了一下，发现他还有一个将 CAD 的 STL 格式文件转换成 MATLAB 的 MAT 格式文件的项目，支持 AutoCAD, Cadkey, and Pro/Engineer，看来他就是先用 CAD 建好模型，再用这个函数导入到 MATLAB 的了。此转换函数文件可以到<a href="http://www.mathworks.com/matlabcentral/fileexchange/3642-cad2matdemo-m">这里</a>下载。</p>

<p>另外，此作者还有一个 2D 3段机器人手臂的演示程序，制作一样极其精良，下载地址在<a href="http://www.mathworks.com/matlabcentral/fileexchange/157-robot-demo">这里</a>。</p>

<p><img src="http://www.mathworks.com/matlabcentral/fx_files/157/1/demobot.jpg" alt="2D 3段机器人手臂的演示程序" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[打砖块 (8051)]]></title>
    <link href="http://pikipity.github.io/blog/breakout-8051.html"/>
    <updated>2013-11-17T09:57:00+08:00</updated>
    <id>http://pikipity.github.io/blog/breakout-8051</id>
    <content type="html"><![CDATA[<h3 id="section">简介</h3>

<p>用 AT89C52 做的一个打砖块游戏机，使用 Proteus 进行的仿真，部分电路如果要实体化还需改进。</p>

<p>使用 AMPIRE12864 作为显示器，三个按键分别控制平台的“左右移动”和“开始游戏”。为了保证游戏中音乐与画面的流畅，使用另外一块 AT89C52 来控制 sounder 进行声音的播放。</p>

<p>项目主页：<a href="http://pikipity.github.io/Breakout_clone">http://pikipity.github.io/Breakout_clone</a></p>

<h3 id="section-1">游戏规则</h3>

<p>玩家控制屏幕底端的平台左右移动来保证小球在屏幕中碰撞。当小球碰撞到上屏的砖块时，被碰撞的砖块会消失，当所有砖块被消掉后，此关胜利，总共 3 关，3 关全部胜利以后，游戏重置；当小球碰触到屏幕下边缘时，失去一条命，总共 5 条命，当 5 条命全部失去以后，游戏结束，整个游戏重置。</p>

<p>游戏过程中，有四种道具，随机出现在下屏的随机位置。每个道具的图案是一个字母，当小球碰触道具图案时，道具生效。以下是道具介绍：</p>

<ol>
  <li>
    <p>变长道具（道具图案是 “L” 字样）：道具生效后，平台变为铺满整个屏幕的底边，一段时间后失效，复原为原来长度。</p>

    <p><img src="https://lh5.googleusercontent.com/-ay36V6-TnVw/UoeDXl8zxmI/AAAAAAAABWo/aq7HFFR_784/s31/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.20.08.png" alt="变长道具" /></p>
  </li>
  <li>
    <p>清除道具（道具图案是 “C” 字样）：生效后，随机清除一部分的砖块。</p>

    <p><img src="https://lh6.googleusercontent.com/-_PYJavumack/UoeDX7XP9TI/AAAAAAAABWs/Ign1Zn3GPeA/s33/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.20.24.png" alt="清除道具" /></p>
  </li>
  <li>
    <p>胜利道具（道具图案是 “W” 字样）：生效后，此关胜利。</p>

    <p><img src="https://lh6.googleusercontent.com/-DG5aOe5ti0s/UoeDYLY2ViI/AAAAAAAABWk/OsG_balBJP8/s35/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.21.08.png" alt="胜利道具" /></p>
  </li>
  <li>
    <p>死亡道具（道具图案是 “D” 字样）：生效后，直接失去一条命。</p>

    <p><img src="https://lh3.googleusercontent.com/-btLEA34gYD4/UoeDXMaDysI/AAAAAAAABWU/QtzDuDzqYYM/s29/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.19.42.png" alt="死亡道具" /></p>
  </li>
</ol>

<p>每一关，上半屏砖块组成的图案都不同（下面是三关的砖块图案），下方平台的移动速度也不同，速度会随着关卡数增大而变快，而且平台的长度也会变短，所以难度也会随之增大。小球的纵向移动速度不变，横向移动速度和平台一致，每次碰撞平台的时候，平台的移动方向和速度就会传递给小球。</p>

<p><img src="https://lh5.googleusercontent.com/-OciVp2e6XnE/UoeDXIK9vcI/AAAAAAAABWM/gzRk9e89D7I/s455/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.19.20.png" alt="第一关砖块图案" /></p>

<p><img src="https://lh6.googleusercontent.com/-d3jCz1ka0pw/UoeDaTrBJPI/AAAAAAAABXQ/fnqbIvgXodg/s452/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.24.24.png" alt="第二关砖块图案" /></p>

<p><img src="https://lh6.googleusercontent.com/-BRp240xR57w/UoeDasw4kMI/AAAAAAAABXY/KX8Rw5KPsBQ/s453/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.26.44.png" alt="第三关砖块图案" /></p>

<h3 id="section-2">文件说明</h3>

<ul>
  <li>circuit 文件夹：Proteus 仿真电路</li>
  <li>material 文件夹：部分使用到的素材</li>
  <li>
    <p>program 文件夹：C 8051 的程序</p>

    <ul>
      <li>sounder_main.c：控制 sounder 的单片机使用的程序</li>
      <li>main.c：主单片机（控制显示器和按键的单片机）的程序</li>
      <li>
        <p>lcd12864.h 和 lcd12864.c：为了实现对 AMPIRE12864 的控制编写的函数，包括：</p>

        <ol>
          <li><code>lcd_write_command ( command )</code>：向 AMPIRE12864 中写入一个命令 command。</li>
          <li><code>lcd_write_data ( data )</code>：向 AMPIRE12864 中写入一个8位的数据 data。</li>
          <li><code>lcd_read_data ( )</code>：从 AMPIRE12864 中读取一个8位的数据。</li>
          <li><code>lcd_init ( )</code>：初始化 AMPIRE12864。</li>
          <li><code>first_page ( )</code>：清空整个屏幕。</li>
          <li><code>choose_screen ( n )</code>：选择屏幕。（同时选择两个屏幕：n=0；左屏幕：n=1；右屏幕：n=2）</li>
          <li><code>set_dot ( x,y )</code>：点亮坐标为 (x,y) 的像素点。（左上角的像素点为 (0,0)，x 坐标向右延伸，y 坐标向下延伸）</li>
          <li><code>clear_dot ( x,y )</code>：清除坐标为 (x,y) 的像素点。（坐标系同上）</li>
          <li><code>read_dot ( x,y )</code>：读取坐标为 (x,y) 的像素点的状态。</li>
        </ol>
      </li>
      <li>game.h 和 game.c：用于刷新屏幕和计算游戏状态的函数。</li>
    </ul>
  </li>
</ul>

<h3 id="section-3">电路图</h3>

<p><img src="https://lh6.googleusercontent.com/-ldlHxz4m384/UocrUK_Sy4I/AAAAAAAABV0/RSKXVdsHxJc/s720/circuit.jpg" alt="电路图" /></p>

<h3 id="section-4">运行画面</h3>

<p><img src="https://lh5.googleusercontent.com/-Zfwu4WWGgPA/UoeDXAfFipI/AAAAAAAABWQ/r451XxrQqQs/s543/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.18.47.png" alt="开始画面" /></p>

<p><img src="https://lh4.googleusercontent.com/-kP_-IcYWnk0/UoeDY4d1ljI/AAAAAAAABXI/VZ0FNyGnSY4/s535/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.21.47.png" alt="游戏进行中的画面" /></p>

<p><img src="https://lh5.googleusercontent.com/-wRC1xSJ4d4E/UoeDZG8JYvI/AAAAAAAABXA/GJjNwrrN1Fk/s544/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.22.17.png" alt="死亡后显示剩余生命的画面" /></p>

<p><img src="https://lh6.googleusercontent.com/-NJ48URX34xc/UoeDZUi1y6I/AAAAAAAABW8/C0oJXVNGqoc/s528/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.22.48.png" alt="5 条命全部耗费完毕之后的画面" /></p>

<p><img src="https://lh4.googleusercontent.com/-IM0DGKy4E1Y/UoeDaDz8iLI/AAAAAAAABXc/XecvfvZClZY/s530/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-16%2520%25E4%25B8%258B%25E5%258D%258810.24.09.png" alt="一关获胜之后的画面" /></p>

<h3 id="demo-">Demo 视频</h3>

<p>由于录制的时候忘记开声音了，所以音乐没有录进去。</p>

<iframe height="498" width="700" src="http://player.youku.com/embed/XNjM1Nzk0MTI4" frameborder="0" allowfullscreen=""></iframe>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IE 娘 -- 你难道是。。。]]></title>
    <link href="http://pikipity.github.io/blog/ie-niang.html"/>
    <updated>2013-11-11T08:24:00+08:00</updated>
    <id>http://pikipity.github.io/blog/ie-niang</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-yjjf7RV1z_U/UoAg3SNvjEI/AAAAAAAABUI/paM1EuaUPFQ/s512/q5eao6SWkZ6Vp6g.jpg" alt="IE 娘" /></p>

<p>今天看到了 B 站 IE 娘大战怪蜀黍的视频，总感觉 IE 娘似曾相识，想了半天，才恍然大悟，“平泽唯”你不好好在轻音部做你的吉他手，跑来微软做代言了啊，竟然还有了个新艺名 – “蓝泽祈”（误）。还有啊，“祈公主”的名号你也敢随便用啊（大误）。</p>

<p><img src="https://lh4.googleusercontent.com/-nE_-lhdYVS4/UoAg3cDqRTI/AAAAAAAABUE/jJ4mRsvazcc/s335/260px-K-On%2521%2521_anime_offical_poster.jpg" alt="“K-ON”乱入" /></p>

<p>“平泽唯”大战怪蜀黍（ &lt;- 我够了~~）</p>

<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=825369&amp;page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" />

<p>我明白的，大战怪蜀黍什么的不是重点，重点是变（去）身（衣）是吧~~~</p>

<p><img src="https://lh4.googleusercontent.com/-npas_x5v_Ws/UoA3P_LItuI/AAAAAAAABVI/Tq_Xlor4G1w/s500/q5eapJ2ZkZ6VqKo.gif" alt="IE 娘变身 1" /></p>

<p><img src="https://lh3.googleusercontent.com/-w3JY7Loctos/UoA3Qdt5OcI/AAAAAAAABVQ/jcIyrz-D0fE/s500/q5eapJ6akZ6VqKs.gif" alt="IE 娘变身 2" /></p>

<p><img src="https://lh4.googleusercontent.com/-1BynTt13KdI/UoA3QVj2q2I/AAAAAAAABVM/kuboxQc7EsQ/s500/q5eapJ_bkZ6VqKw.gif" alt="IE 娘变身 3" /></p>

<p>看到网上说，IE 娘属于 loli。这些人一定不是 loli 控吧，下面才是 loli 好吗！！！</p>

<p><img src="https://lh3.googleusercontent.com/-1Y7P8OzT1ug/UoAjY1LvFTI/AAAAAAAABUk/dk_XQK39W7Q/s250/250px-12105984.jpg" alt="火狐娘" /></p>

<p><img src="https://lh3.googleusercontent.com/-n4qWs3l1DCk/UoAjZN8uY7I/AAAAAAAABUs/HW80NPmf_A0/s640/59_MacOS.jpg" alt="Mac OS X 娘" /></p>

<p><img src="https://lh3.googleusercontent.com/-2d3_rTQM2UI/UoAjZP7iYnI/AAAAAAAABUo/YK6RLfefr2A/s500/Chrome.jpg" alt="Chrome 娘" /></p>

<p>最后的最后，给出的是官（萌）方（娘）介（百）绍（科）的链接：</p>

<ul>
  <li><a href="http://zh.moegirl.org/IE%E5%A8%98">IE 娘</a></li>
  <li><a href="http://zh.moegirl.org/Firefox%E5%A8%98">火狐娘</a></li>
  <li><a href="http://zh.moegirl.org/Chrome">Chrome 娘</a></li>
  <li><a href="http://zh.moegirl.org/Mac_OS_X%E5%A8%98">Mac OS X 娘</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[电风扇如何用一个马达同时完成转动扇叶和摆头]]></title>
    <link href="http://pikipity.github.io/blog/funny-gif.html"/>
    <updated>2013-11-10T10:33:00+08:00</updated>
    <id>http://pikipity.github.io/blog/funny-gif</id>
    <content type="html"><![CDATA[<p>今天看到一个 GIF 图，很有意思，重点不是机械的原理，重点是这种 GIF 图怎么做啊！（误）</p>

<p><img src="https://lh6.googleusercontent.com/-w8KIYt_Ep_o/Un7wADaDW3I/AAAAAAAABTw/1kPaM-PeNSg/s500/1fff2111.gif" alt="电风扇原理" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一起将 processing 镶嵌在网页上]]></title>
    <link href="http://pikipity.github.io/blog/sketchpad.html"/>
    <updated>2013-11-05T21:42:00+08:00</updated>
    <id>http://pikipity.github.io/blog/sketchpad</id>
    <content type="html"><![CDATA[<p>一直想找一种方法，将 processing 生成的程序放到网页上。在搜索了一番 Google 之后发现要使用 <a href="http://processingjs.org/">processing.js</a> 才可以，但是要设置自己的网页才可以，太麻烦了，于是就放弃了。今天在浏览 <a href="http://processingjs.org/">processing.js</a> 官网说明的时候发现，在<a href="http://processingjs.org/articles/p5QuickStart.html">《Processing.js Quick Start - Processing Developer Edition》</a>一文中介绍了以下两个网站可以在线编写并共享自己的 processing 代码和效果：</p>

<ol>
  <li>
    <p><a href="http://sketchpad.cc/">sketchpad</a></p>

    <p>这个网站上，不仅可以实现在线编写和分享代码，还可以自由浏览别人的共享代码，所有程序的效果可以实时演示，编辑器中还提供多人合作功能，很方便。</p>

    <p>缺点也很显著，编辑器虽然提供语法高亮，但是高不高亮完全没有用，所有文字一个颜色（只有 class 部分和别的不一个颜色）。第二个缺点不晓得是不是我浏览器的问题，贴出来的动画会播放一段时间之后突然放大，导致鼠标定位出现错误，很是奇怪。</p>

    <p><img src="https://lh3.googleusercontent.com/-Cx0ZXzkD2ho/UnkDB9mWrDI/AAAAAAAABTc/FiQVDRkoVCs/s912/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-05%2520%25E4%25B8%258B%25E5%258D%258810.22.47.png" alt="sketchpad 编辑器界面" /></p>

    <p>下面是我为了测试编写的一段小代码：</p>

    <iframe id="ifr" width="200" height="235" scrolling="no" style="background: url(http://studio.processingtogether.com/static/img/jun09/pad/connectingbar.gif) no-repeat center 60px;" src="http://studio.processingtogether.com/sp/pad/iframe/ro.9DUd1JyjanBXc/rev.925?autostart=0"></iframe>
  </li>
  <li>
    <p><a href="http://hascanvas.com/">hascanvas</a></p>

    <p>这个网站设计的很独特，编辑器隐藏在左边，鼠标靠近浏览器左边缘的时候，编辑器就会自动弹出，鼠标移开编辑区后，就会保存一次代码并编译，结果就显示在整个页面上。但是我用和上面一模一样的代码进行测试始终报错，这里只好拿别人的代码演示一下了。（貌似鼠标位置依然有偏差）</p>

    <iframe src="http://hascanvas.com/crossing/embed" frameborder="0" scrolling="no" style="width:600px;height:400px;"></iframe>

    <p><img src="https://lh6.googleusercontent.com/-gSeb362FAWw/UnkDCOO0AMI/AAAAAAAABTg/7bDgI4cjK80/s912/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-11-05%2520%25E4%25B8%258B%25E5%258D%258810.36.00.png" alt="hascanvas 界面" /></p>
  </li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[QC12864B 控制库]]></title>
    <link href="http://pikipity.github.io/blog/qc12864b-library.html"/>
    <updated>2013-10-27T16:27:00+08:00</updated>
    <id>http://pikipity.github.io/blog/qc12864b-library</id>
    <content type="html"><![CDATA[<p>为了方便自己使用 8051 对 QC12864B 的控制编写了一个库文件。</p>

<p>QC12864B 自带字库，并且字库中带有中文，使用 ST7920 作为控制器。<a href="http://pan.baidu.com/s/1qrhEF">这里有关于 QC12864B 的说明文档下载</a></p>

<p>此项目可以到<a href="https://github.com/pikipity/QC12864B_8051.git">这里</a>查看和下载源代码。具体的使用信息，可以到 wiki 查询：</p>

<ol>
  <li><a href="https://github.com/pikipity/QC12864B_8051/wiki/How-to-use">How to use</a>：包括软件中如何引用和硬件如何连接的说明。</li>
  <li><a href="https://github.com/pikipity/QC12864B_8051/wiki/Functions">Function</a>：介绍了几个主要会使用到的函数。</li>
</ol>

<p>这里有一段视频项目中 <code>teasting</code> 文件夹中程序的运行结果：</p>

<embed pluginspage="http://www.macromedia.com/go/getflashplayer" src="http://you.video.sina.com.cn/api/sinawebApi/outplayrefer.php/vid=117845240_3342829334_bh28RyE5DTLK+l1lHz2stqlF+6xCpv2xhGm3v1CsJwdaVgiYJMXNb9wG5yHSBc1G8XoLHcwydP8h3xkoaq5Y/s.swf" type="application/x-shockwave-flash" name="sinaplayer" allowfullscreen="true" width="480" height="370" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[粘着系男子的15年纠缠不休]]></title>
    <link href="http://pikipity.github.io/blog/15-year.html"/>
    <updated>2013-10-26T22:27:00+08:00</updated>
    <id>http://pikipity.github.io/blog/15-year</id>
    <content type="html"><![CDATA[<p>看到最后才发现是大虐。。。</p>

<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=114900&amp;page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IOS7 是在 Word 里面设计出来的么？]]></title>
    <link href="http://pikipity.github.io/blog/ios-in-word.html"/>
    <updated>2013-10-23T23:05:00+08:00</updated>
    <id>http://pikipity.github.io/blog/ios-in-word</id>
    <content type="html"><![CDATA[<p>这个视频就是用来吐槽 IOS7 设计的吧，233333</p>

<embed src="http://player.youku.com/player.php/sid/XNjI1MTI5Mjgw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[贪吃蛇（8051）]]></title>
    <link href="http://pikipity.github.io/blog/snake-8051.html"/>
    <updated>2013-10-19T22:22:00+08:00</updated>
    <id>http://pikipity.github.io/blog/snake-8051</id>
    <content type="html"><![CDATA[<h3 id="section">简介</h3>

<p>使用 AT89C52 制作的贪吃蛇游戏。练习在 8051 上使用实时多任务系统。你可以到<a href="http://pikipity.github.io/snake_8051/">这里下载源码</a>。</p>

<p>一开始的构想是利用 LCD12864 来作为显示屏，于是选择了自己比较熟悉的 ST7920 作为控制器的 LCD12864，毕竟之前也使用同样的显示屏用 Arduino 做过尔罗斯方块，虽然图像显示处理缓慢，但是应该还是可以使用的，测试之后的结果大失所望，由于过于过于缓慢的图像显示导致屏幕闪烁现象过于严重，并且导致任务堵塞，程序堵死，于是放弃。改儿使用 4 块 8*8 LED 矩阵来做显示屏，由于要自己撰写显示函数和游戏函数，程序量徒然增加，还出现了单片机内存不足的现象，经过调试，最终结果还算不错，以下基本功能都已经实现：</p>

<ol>
  <li>蛇和食物的显示。</li>
  <li>蛇的移动，包括碰撞边界和自身之后的死亡判定和碰撞食物的判定。</li>
  <li>蛇在吃掉食物之后的增长效果。</li>
</ol>

<p>由于 8051 单片机本身内存与机能的限制，还有很多预想功能未能实现：</p>

<ol>
  <li>食物位置不是随机的，永远固定。</li>
  <li>食物数量固定，就是开始游戏之后的那几个食物，不会再增加了，吃完就获胜。</li>
  <li>蛇的最大长度是固定的。</li>
  <li>蛇的初试长度与位置都不是随机的，永远固定。</li>
</ol>

<h3 id="section-1">文件说明：</h3>

<ol>
  <li>lcd12864 文件夹中是使用 lcd12864 制作的初版游戏。仅实现了蛇的移动和边界碰撞判定。闪烁现象严重</li>
  <li>
    <p>LCD_array 文件夹中是最终成品。使用 4 个 8*8 的 LED 点阵来作为显示，4个按钮控制上下左右，还有一个 Reset 键用来重启单片机（也就是重启游戏）。此文件夹中包括以下文件</p>

    <ul>
      <li>
        <p>circuit 文件夹：Proteus 仿真电路图，如下</p>

        <p><img src="https://lh5.googleusercontent.com/-lG-RF7FdufE/UmJ34xQ_jUI/AAAAAAAABS8/sQYAz3mA0DA/s720/circuit.jpg" alt="仿真电路图" /></p>
      </li>
      <li>
        <p>program 文件夹：烧录入单片机中的程序文档，包括</p>

        <ul>
          <li>Main.h, Sch51.h, Sch51.c, 2<em>01</em>12g.h, 2<em>01</em>12g.c: 实时多任务系统所需的文件，由《PATTERNS FOR TIME-TRIGGERED EMBEDDED SYSTEMS》一书提供。</li>
          <li>main.c: 主程序。main 函数所在。</li>
          <li>
            <p>ledarray.h, ledarray.c: LED 点阵显示函数：</p>

            <ul>
              <li>LED 点阵初始化函数：<code>led_init()</code></li>
              <li>绘制第一块与第二块 LED 点阵的函数：<code>draw1()</code></li>
              <li>绘制第三块与第四块 LED 点阵的函数：<code>draw2()</code></li>
              <li>清空显示的函数：<code>first_page()</code></li>
              <li>向某个坐标写入一个点的函数（左上角为原点，x轴正方向向右延伸，y轴正方向向下延伸，下同）：<code>set_dot()</code></li>
              <li>读取某个坐标是否有点存在的函数：<code>read_dot()</code></li>
            </ul>
          </li>
          <li>
            <p>game.h, game.c: 游戏控制及显示函数：</p>

            <ul>
              <li>根据蛇和食物的控制矩阵，向屏幕内绘制点的函数：<code>draw()</code></li>
              <li>控制蛇移动的函数：<code>move()</code></li>
              <li>检查按键的函数：<code>button()</code></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h3 id="section-2">最终效果：</h3>

<ol>
  <li>
    <p>胜利</p>

    <div><object id="sinaplayer" width="480" height="370"><param name="allowScriptAccess" value="always" /><embed pluginspage="http://www.macromedia.com/go/getflashplayer" src="http://you.video.sina.com.cn/api/sinawebApi/outplayrefer.php/vid=117246371_3342829334_bBjjTyc/XmLK+l1lHz2stqlF+6xCpv2xhGm3v1CsJwdaVgiYJMXNb9wG5yvSBsxF8HoLHcwydP8h1Rkra61Z/s.swf" type="application/x-shockwave-flash" name="sinaplayer" allowfullscreen="true" allowscriptaccess="always" width="480" height="370" /></object></div>
  </li>
  <li>
    <p>失败</p>

    <div><object id="sinaplayer" width="480" height="370"><param name="allowScriptAccess" value="always" /><embed pluginspage="http://www.macromedia.com/go/getflashplayer" src="http://you.video.sina.com.cn/api/sinawebApi/outplayrefer.php/vid=117246399_3342829334_aBnnR3M5DGXK+l1lHz2stqlF+6xCpv2xhGm3v1CsJwdaVgiYJMXNb9wG5yvSBsxL+HoLHcwydP8h1Rkra6NR/s.swf" type="application/x-shockwave-flash" name="sinaplayer" allowfullscreen="true" allowscriptaccess="always" width="480" height="370" /></object></div>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MATLAB 的函数中清理公用 workspace]]></title>
    <link href="http://pikipity.github.io/blog/clear-workspace-matlab.html"/>
    <updated>2013-10-16T18:51:00+08:00</updated>
    <id>http://pikipity.github.io/blog/clear-workspace-matlab</id>
    <content type="html"><![CDATA[<p>今天在编写一个 MATLAB 函数的时候，尝试使用 <code>clear all;</code> 来清理掉 workspace，结果运行后发现完全没有效果。查找了一下 MATLAB 的帮助文件才发现，每个函数在运行的时候都有自己的 workspace，所以如果在函数内部使用 <code>clear</code> 的话，清空的是函数自己的 workspace，不会影响到公用的 workspace。于是又到<a href="http://www.mathworks.com/matlabcentral/"> mathwork 的 MATLAB Center </a> 逛了一下，发现了一种很好的方法：使用 <code>evalin()</code> 函数。<a href="http://www.mathworks.com/matlabcentral/newsreader/view_thread/253314">原帖在这里</a>。</p>

<p>总结一下，就是使用下面的语句：</p>

<pre><code>evalin('caller','clear all');
</code></pre>

<p>或者使用</p>

<pre><code>evalin('base','clear all');
</code></pre>

<p>主要区别是，前一个不仅会清空公用 workspace，也会清空其他函数的 workspace。后一个仅仅只清空公用的 workspace。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keil C 中不再编译未使用的函数]]></title>
    <link href="http://pikipity.github.io/blog/linker-51.html"/>
    <updated>2013-10-13T23:16:00+08:00</updated>
    <id>http://pikipity.github.io/blog/linker-51</id>
    <content type="html"><![CDATA[<p>最近在为 AT89C52 编写 LCD12864 的头文件的时候发现 Keil 竟然无法自动识别未使用的函数，也就是说 Keil 会将所有函数全部编译一边，如果 main 函数中没有使用某个函数的话，这个没使用的函数不仅占用了单片机的内存，在编译结束后的 Warning 也让人很不舒服。所以去搜索了一下，大体有两种解决方法：</p>

<ol>
  <li>添加注释或者编译开关：如果对于小项目，这种方法的确可行，但是如果想编写一个具有通用意义的头文件的话，要一个个把不用的头文件注释掉，显然不实际。每次使用头文件都要修改一次注释和编译开关也不现实。所以这个方法不具有普遍适用意义。</li>
  <li>各个函数分别编写一个 C 文件，然后仅将用到的函数编译为 OBJ。每次使用头文件都要找到需要的函数然后编译一次，也很麻烦，此方法显然也不具有普遍适用意义。</li>
</ol>

<p>既然 Keil 默然的连接器无法识别未使用的函数，那么可不可以试试别的连接器呢？于是去<a href="http://www.keil.com/"> Keil 的官网</a>逛了一圈，发现 Keil 本身就可以将默认的连接器 BL51 换为另一种连接器 LX51。赶紧更换一下试一试，更换步骤如下：</p>

<ol>
  <li>工具栏 <code>Project</code> -&gt; 选择 <code>Options For Target 'xx'</code>。</li>
  <li>在 <code>Device</code> 选项卡，选中 <code>Use Extended Linker(LX51) instead of BL51</code>。</li>
</ol>

<p>但是编译一中发现问题依然没有解决，这是怎么回事呢？应该是还需要添加编译选项吧。于是又去看了一下<a href="http://www.keil.com/support/man/docs/lx51/default.htm"> LX 51 说明文档</a>，发现了 “REMOVEUNUSED” 这样一个选项：</p>

<blockquote>
  <p>The <strong>REMOVEUNUSED</strong> directive removes unused program and data segments provided that Data Overlaying is enabled. When you apply this directive unused functions along with the related data segments are deleted in the final executable program.</p>
</blockquote>

<p>这不就是我需要的嘛！！赶紧加上去：</p>

<p>在 <code>Options For Target 'xx'</code> 中的 <code>LX51 Misc</code> 选项卡中的 <code>Misc controls</code> 填写 “REMOVEUNUSED”。</p>

<p>再次编译，发现 Warning 不见了，编译之后的 hex 文件也小了，问题解决。</p>

<p>总结一下，就是三步：</p>

<ol>
  <li>工具栏 <code>Project</code> -&gt; 选择 <code>Options For Target 'xx'</code>。</li>
  <li>在 <code>Device</code> 选项卡，选中 <code>Use Extended Linker(LX51) instead of BL51</code>。</li>
  <li>在  <code>LX51 Misc</code> 选项卡中的 <code>Misc controls</code>， 填写 “REMOVEUNUSED”（不加引号）。</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[多人实时合作免费在线绘图软件 -- Process On]]></title>
    <link href="http://pikipity.github.io/blog/process-on.html"/>
    <updated>2013-10-05T08:51:00+08:00</updated>
    <id>http://pikipity.github.io/blog/process-on</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-Q0n9wEE-bYA/Uk9jd08BJuI/AAAAAAAABR4/QGkUPxMBvR8/s912/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-05%2520%25E4%25B8%258A%25E5%258D%25888.48.46.png" alt="Process On" /></p>

<p>今天推荐一款用来绘图的在线应用 – <a href="http://www.processon.com/">Process On</a>，其内置了多种模版，非常适合绘制结构性很强的图片，例如流程图等。</p>

<p><img src="https://lh5.googleusercontent.com/-DX51QUQnnts/Uk9kIfSkO-I/AAAAAAAABSA/KqhLYRS-gOU/s720/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-05%2520%25E4%25B8%258A%25E5%258D%25888.56.29.png" alt="内置模版" /></p>

<p><img src="https://lh6.googleusercontent.com/-Qow5by5ZDps/Uk9krAeS5nI/AAAAAAAABSM/xHXpGkEiW_E/s912/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-05%2520%25E4%25B8%258A%25E5%258D%25888.58.58.png" alt="绘制界面" /></p>

<p>上图就是绘制界面了，也许第一眼看是去觉得及其普通，甚至左边所提供的备选图形都和<a href="http://dia-installer.de/">开源软件 Dia</a>如出一辙。的确，其绘图功能没有什么出众的地方，如果想快速绘制出专业的流程图，这款软件并不是一个很好地选择，毕竟<a href="http://office.microsoft.com/en-us/visio/">微软的 Visio</a> 比它专业几百倍。但是今天之所以推荐它，是因为其强大的在线多人合作功能。这里所说的多人合作不是指一人保存退出之后其他人才可以观看和修改，如果是那样的话，用 <a href="https://www.dropbox.com">Dropbox</a> 就可以了，这里所说的合作是实时合作，只要每个人都在线，就可以由作者通过“邀请协作者”的方式将其他人添加入编辑群中，每个协作者的修改都会实时显示在其他协作者的画面上。如果协作者们距离很远，还可以通过内置的“聊天”功能来进行讨论。很大程度上方便了多人流程图绘制的问题，再也不会出现，一个人掌握电脑其他人在旁边七嘴八舌导致操作者不知道应该如何是好的情况。</p>

<p><img src="https://lh6.googleusercontent.com/-iR6I-HdwVgY/Uk9p3JLSJNI/AAAAAAAABSg/syr21nwsI3Q/s740/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-05%2520%25E4%25B8%258A%25E5%258D%25889.19.13.png" alt=" Visio 文件导入帮助" /></p>

<p>并且其支持 <a href="http://office.microsoft.com/en-us/visio/">Visio</a> 文件的导入。还有一个类似于社交网络的共享圈，可以通过关注其他人来了解对方正在制作什么样的图片，也可以通过搜索来发现其他人共享出来的图片。总而言之，这是一款不可多得多人实时在线合作绘图网站。</p>

<p><img src="https://lh6.googleusercontent.com/-Rh-C4psyJ84/Uk9p3JQe4AI/AAAAAAAABSk/gozi3_wdROw/s912/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-05%2520%25E4%25B8%258A%25E5%258D%25889.18.27.png" alt="类似于社交网络的共享圈" /></p>

<p><a href="http://www.processon.com/">这里是 Process On 的网址，免费注册和使用。</a></p>

<p><a href="https://chrome.google.com/webstore/detail/processon-online-diagramm/pnggaliohjcaboolkcpjhfondbjlehkm?utm_source=chrome-ntp-icon">Chrome 上没有 Process On 的在线编辑器的应用，只有一个网站快捷方式的应用</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解决澳门大学 ummoodle 上 PDF 文件在 IOS 无法正常打开或下载的问题]]></title>
    <link href="http://pikipity.github.io/blog/ummoodle-pdf.html"/>
    <updated>2013-10-04T21:11:00+08:00</updated>
    <id>http://pikipity.github.io/blog/ummoodle-pdf</id>
    <content type="html"><![CDATA[<p>澳门大学的 ummoodle 在更新之后就出现了 pdf 文件在 IOS 设备上无法正常打开的状况，打开包含 pdf 的网页之后就会出现如下画面：</p>

<p><img src="https://lh3.googleusercontent.com/-QQxd0viyyg8/Uk7Cc9wZh5I/AAAAAAAABRE/reSNdTtOBrA/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252020%252019%2520PM.png" alt="无法拖动和下载的 pdf 文件" /></p>

<p>pdf 文件就好像一个没有完整显示的图片一样在那里，没法下载和拖动。但是此问题仅限于 IOS 设备里的浏览器，电脑上的浏览器可以正常显示，Android 设备上无法显示文件，但是会显示一条链接，点击连接之后就可以下载文件了，所以很显然是 IOS 设备的浏览器对于网页的解析出现了问题，于是我研究了一下一个含有 pdf 文件的网页，发下了下面的一段代码：</p>

<pre><code>&lt;object id="resourceobject" data="https://ummoodle.umac.mo/pluginfile.php/74630/mod_resource/content/1/elec414-2013-2.pdf" type="application/pdf" width="800" height="600"&gt;

&lt;param name="src" value="https://ummoodle.umac.mo/pluginfile.php/74630/mod_resource/content/1/elec414-2013-2.pdf" /&gt;

Click &lt;a href="https://ummoodle.umac.mo/pluginfile.php/74630/mod_resource/content/1/elec414-2013-2.pdf" &gt;elec414-2013-2.pdf&lt;/a&gt; link to view the file.

&lt;/object&gt;
</code></pre>

<p>很显然，网页本身是想调用 IOS 内置的 pdf 阅览器来浏览 pdf 文件，但是由于浏览器排版的原因（固定宽高的设定很明显不适合移动设备啊），导致此被预览的 pdf 文件被其他区块所覆盖，进而导致用户无法对 pdf 文件进行操作。由于 Android 系统没有内置 pdf 阅览器，所以只会显示文件链接，从而避免了排版问题。</p>

<p>既然原因找到，那么就来想一想解决方法吧。很显然，学校对网页的改进还需要时间，那么就从自身做起吧，基本来说想到了两种解决方案：</p>

<ol>
  <li>禁用 IOS 内置的 pdf 阅览器。这个方法比较复杂，由于 IOS 取消了 safari 设置中“禁用内置 pdf 阅览器”的选项，导致现在想要禁用 pdf 阅览器就必须直接删除<code>/Library/</code>下的 pdf 阅览器的插件才行，必须越狱之后安装 iFile 才可以。此方法不仅麻烦，由于需要触碰到系统文件，还比较危险，一旦删错文件，后果不堪设想。</li>
  <li>使用 moodle 的 APP，例如 <a href="https://itunes.apple.com/us/app/my-moodle/id461289000?mt=8">My Moodle</a> 和 <a href="https://itunes.apple.com/au/app/moodle-mobile/id633359593?mt=8">Moodle Mobile</a>，暂时我还没有使用过，但是据使用者说，可以正常打开 pdf 文件。</li>
  <li>
    <p>直接浏览目标网页的 html 源代码，找到 pdf 文件原始地址来打开。我选择使用这种方法，一次设置之后，以后使用也很方便，熟练以后，因为 ummoodle 的各个网页的 html 代码结构都差不多，所以也是很快捷的。由于 IOS 上的 safari 浏览器无法直接查看源代码，所以需要借助一些可以查看 html 的网站来实现这个方法，我借助的是<a href="http://ole.michelsen.dk/blog/view-source-on-the-ipad-and-iphone/">这个</a>网站的方法。原理就是利用 “GeSHi” 这个小程序将网页发送给 “ole.michelsen.dk” 的服务器来解析网页的 html 代码，然后显示出来（还带有代码高亮呦！！）。具体的设置如下：</p>

    <ol>
      <li>
        <p>在 IOS 上用 safari 随便打开一个网页，然后保存为书签，为了以后方便，书签起名叫“查看源代码”</p>

        <p><img src="https://lh6.googleusercontent.com/-GJzD1e5flq4/Uk7CacaecPI/AAAAAAAABQM/7yNUfqyc85s/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252002%252034%2520PM.png" alt="我这里保存 Google 为书签" /></p>

        <p><img src="https://lh3.googleusercontent.com/-UwnXN2sL5Dc/Uk7CaT4DWHI/AAAAAAAABQY/TRDTziQF2pQ/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252003%252059%2520PM.png" alt="书签起名叫“查看源代码”" /></p>
      </li>
      <li>
        <p>打开<a href="http://ole.michelsen.dk/viewsource/bookmarklet.min.js">这个</a>链接，将里面的内容全选并复制。</p>

        <p><img src="https://lh3.googleusercontent.com/-HMF-lKk1y-M/Uk7CclMamRI/AAAAAAAABRA/HzhlBHulUBA/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252007%252032%2520PM.png" alt="复制所有内容" /></p>
      </li>
      <li>
        <p>在书签中找到刚才保存的书签，并将刚才复制的内容粘贴到此书签的 URL 处，点击“完成”保存书签就可以了。</p>

        <p><img src="https://lh4.googleusercontent.com/-HsLL8-EF6tk/Uk7CaRtwBII/AAAAAAAABQU/Tjad3nkRsko/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252004%252027%2520PM.png" alt="编辑“查看源代码”书签" /></p>

        <p><img src="https://lh4.googleusercontent.com/-WzvU_jk6DA0/Uk7CbGpBFeI/AAAAAAAABQg/fm0VEzchE0U/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252004%252040%2520PM.png" alt="将复制的内容粘贴到书签 URL 处" />
如果想要下载某个网页的 pdf 文件，就先打开那个含 pdf 文件的网页，然后点击“查看源代码”的书签，就会打开网页的源代码，然后找到其中包含 pdf 文件源地址的部分（很好找的），点击源地址下载就可以了。</p>
      </li>
    </ol>

    <p><img src="https://lh3.googleusercontent.com/-f0W97s6s1pQ/Uk7ON6MtNQI/AAAAAAAABRY/iqaaVByPcYk/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252005%252051%2520PM.png" alt="含有 pdf 文件的网站，点击“查看源代码”的书签（可以把书签放在书签栏方便查找）" /></p>

    <p><img src="https://lh5.googleusercontent.com/-oCYL-kJ0eCM/Uk7CbpDIoEI/AAAAAAAABQs/73VVyzHxwg8/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252006%252016%2520PM.png" alt="html 中包含 pdf 文件源地址的部分" /></p>

    <p><img src="https://lh4.googleusercontent.com/-I6jQKkkt67A/Uk7CcDHtE2I/AAAAAAAABQ4/_Q-EJqEbLYk/s512/%25E7%2585%25A7%25E7%2589%2587%252004-10-2013%252009%252006%252028%2520PM.png" alt="点击 pdf 文件源地址就可以正常打开 pdf 文件了" /></p>
  </li>
</ol>

<p>PS: ICTO 回复了相关问题，回复邮件内容如下：</p>

<pre><code>For this case, please advice your teacher to change the "Appearance" option of the PDF file to "New window" in UMMoodle and this will solve your problem.
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[巨人的猎手]]></title>
    <link href="http://pikipity.github.io/blog/attack-on-titan.html"/>
    <updated>2013-10-03T20:28:00+08:00</updated>
    <id>http://pikipity.github.io/blog/attack-on-titan</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-r3XfVFu4YSU/Uk1xgsz8cyI/AAAAAAAABOE/3ONWh1lL_jk/s800/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-03%2520%25E4%25B8%258B%25E5%258D%25889.30.19.png" alt="巨人的猎手" /></p>

<p>今天给大家推荐一款国人制作的 3D 网页游戏–《巨人的猎手》，属于《进击的巨人》的同人游戏，由你来扮演《进击的巨人》中的五名主角在不同的地图上猎杀巨人。可以单机玩，也可以局域网联机玩。每个角色都有不同的特殊技。操作方面还是很复杂的：</p>

<ul>
  <li>WASD：上下左右</li>
  <li>左shift：跳跃（使用气筒喷射，可快速前进）</li>
  <li>左control：闪避（钩住巨人飞起时可利用闪避跳到更高处）</li>
  <li>Q：左挂钩（按住是发射，松开就收回了，所以要是想用钩锁挂住并将自己拉近就按住不要松开，发射挂钩和跳跃都会消耗燃气，燃气量显示在屏幕下方中间，如果消耗没了就不能发射挂钩和跳跃了）</li>
  <li>E：有挂钩（机制和左挂钩一样）</li>
  <li>空格键：左右挂钩同时发射（机制和左挂钩一样）</li>
  <li>鼠标左键：普通攻击（就是挥刀）</li>
  <li>鼠标右键：特殊攻击（不同角色特殊攻击不同）</li>
  <li>R: 换刀片（刀片数量有限，数量显示在屏幕下方中间部分，换完就要等死了）</li>
  <li>P：暂停</li>
  <li>T：重启游戏（如果挂了，就按“T”吧）</li>
  <li>C：改变镜头</li>
  <li>X：显示/隐藏瞄准用的准星（准星代表剑的挥舞方向，准星旁边的数字代表最近的是物体离你的举例，准星旁边的”&lt;”代表左挂钩方向，”&gt;”代表右挂钩方向，如果是红色代表物体太远以致挂钩无法钩住或刀无法砍到，白色代表挂钩可以钩住物体或刀可以砍到）</li>
  <li>Backspace：全屏</li>
  <li>N：行礼</li>
</ul>

<p>玩了几分钟之后我彻底的“回想起了巨人的恐惧”，太难杀了，因为只有攻击巨人颈后那一小片区域才能杀死巨人，巨人会根据你所在的位置做不同的动作，如果你在天上，就顺手抓住你，如果你在头附近就直接张嘴咬你，如果你在地上还会蹲下把你抓起来，总之想绕到背后超级难，就算你好不容易上到脖子上了，可能还会被巨人抓痒痒一样一下抓住。最好在正式玩之前用“trainning”地图（”tranning”地图里巨人不会动）练练手，熟悉一下操作。我总结了一下，就是远远的找准目标之后，远距离绕到目标背后，用钩锁或是跳跃快速前进，找准时机用钩锁上脖子，果断出刀，如果打偏，不要浪费刀刃，放弃之后赶快用钩锁或跳跃快速逃跑摆脱巨人的追踪。</p>

<p><a href="http://fenglee.com/game/aog/">《巨人的猎手》游戏网址在这里</a></p>

<p>游戏作者“鴌Feng”是一个国内的独立游戏制作人，<a href="http://fenglee.com/blog/">其博客在这里</a>，<a href="http://fenglee.com/blog/html/257.html">《巨人的猎手》的介绍博文在这里</a>，Feng大大过去还制作过几款同样游戏性很高（就是很好玩）的游戏，<a href="http://fenglee.com/">你可以在这里找到他的作品</a>，我只能说：</p>

<blockquote>
  <p>此乃大神，需要顶礼膜拜~~~（膜拜中。。。膜拜中。。。膜拜中。。。膜拜中。。。）</p>
</blockquote>

<p><img src="https://lh5.googleusercontent.com/-HGUx9chktuE/Uk1w4DgHGPI/AAAAAAAABN4/hT95c2ojVvo/s720/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-03%2520%25E4%25B8%258B%25E5%258D%25889.12.37.png" alt="巨人我来啦！受死吧！" /></p>

<p><img src="https://lh3.googleusercontent.com/-cqa1rgIfx4A/Uk1w4MmxVGI/AAAAAAAABN8/faFdboZPD5E/s720/%25E5%25B1%258F%25E5%25B9%2595%25E5%25BF%25AB%25E7%2585%25A7%25202013-10-03%2520%25E4%25B8%258B%25E5%258D%25889.20.02.png" alt="迅速惨死在巨人的怀抱中。。。" /></p>

<p>看女流姐卖萌玩《巨人的猎手》（此为老版本，巨人还很丑，貌似只有一张地图一个人物，现已多次更新，游戏性大大提高）：</p>

<embed src="http://player.youku.com/player.php/sid/XNjA1MDcxMTQ0/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[俄罗斯方块（Arduino）]]></title>
    <link href="http://pikipity.github.io/blog/melrose-box-arduino.html"/>
    <updated>2013-09-29T13:34:00+08:00</updated>
    <id>http://pikipity.github.io/blog/melrose-box-arduino</id>
    <content type="html"><![CDATA[<p>经过一个星期闲着无聊地编写和调试，终于可以用 Arduino 玩俄罗斯方块了。四个按钮分别控制左、右、加速下落、转动。使用 LCD12864（QC12864B） 来显示游戏画面。为了寻找可以用来控制 QC12864B 的 Arduino 库花了很长时间，最终选择了 <a href="https://code.google.com/p/u8glib/">u8glib</a>，因为这个库支持的 LCD 控制器非常丰富。<a href="https://code.google.com/p/u8glib/">u8glib 库可以在这里下载</a>，<a href="http://pan.baidu.com/s/1qrhEF">关于 QC12864B 以及如何使用 u8glib 来控制 QC12864B 的资料可以在这里下载</a>，资料中包含一个从网上找来的使用 Arduino 做示波器的例子，使用的就是 <a href="https://code.google.com/p/u8glib/">u8glib</a> 库。</p>

<p>我制作的这个<a href="http://pikipity.github.io/Melrose_box">俄罗斯方块游戏机的项目主页在这里</a>。</p>

<p>面包板连接图：</p>

<p><img src="https://lh3.googleusercontent.com/-MMKU4QZefc4/UkepsoONq0I/AAAAAAAABNI/wASf1AFsVVE/s512/Melrose_box_Scheme_bb.png" alt="面包板连接图" /></p>

<p>运行效果：</p>

<p><img src="https://lh6.googleusercontent.com/-uDiZRNthjjI/Uketz4ePskI/AAAAAAAABNk/zKLtFjShG7U/s640/begin.jpg" alt="运行效果1" /></p>

<p><img src="https://lh5.googleusercontent.com/-PdvRIs9ik6g/UketzzLefkI/AAAAAAAABNc/_8sDPpLxf18/s640/playing.jpg" alt="运行效果2" /></p>

<p><img src="https://lh5.googleusercontent.com/-nyWIb1rcJgc/UketznUnOoI/AAAAAAAABNg/9YnAebKKDXY/s640/finish.jpg" alt="运行效果3" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[利用 Arduino 进行超声波测距]]></title>
    <link href="http://pikipity.github.io/blog/ultrasonic-distance-measurement-using-arduino.html"/>
    <updated>2013-09-21T10:32:00+08:00</updated>
    <id>http://pikipity.github.io/blog/ultrasonic-distance-measurement-using-arduino</id>
    <content type="html"><![CDATA[<p>在<a href="http://pikipity.github.io/blog/arduino-dht11-lcd1602.html">昨天测量温度的装置</a>上又加上了 HC-SR04 来进行超声波测距，先利用 DHT11 测量温度，然后利用温度来计算出较为准确的声速（根据<a href="http://en.wikipedia.org/wiki/Relativistic_Euler_equations">相对论的欧拉方程</a>，声速（米每秒）=331+0.6*温度（摄氏度）），再利用 HC-SR04 测得的超声波来回的时间计算出距离，并在 LCD1602 上显示。</p>

<p>HC-SR04 的使用非常简单，<a href="http://www.doc88.com/p-737494835063.html">这里有一份 HC-SR04 的中文手册</a>，首先向 Trig 引脚输入一个不小于10us的高电平，然后测量 Echo 引脚返回的高电平的时间 t，然后利用公式：距离=t*声速/2，就可以计算得到距离了。但是需要注意：</p>

<ol>
  <li>测量周期要在60ms以上，防止回声影响。</li>
  <li>计算距离时单位要统一，利用<code>pulseIn()</code>函数返回的时间单位是“微秒”，测量结果单位一般是“厘米”，所以声速要从“米每秒”换算为“厘米每微秒”，也就是除以10000。</li>
  <li>测量距离为2cm~400cm，太近的话会有盲区，太远的话由于返回信号太弱难以检测。</li>
</ol>

<p><a href="https://github.com/pikipity/Ultrasonic_distance_measurement_using_Arduino.git">程序可以到这里下载</a>，其中 “HC_SR04_Arduino” 文件夹中是一个 HC-SR04 的 Arduino 测试程序，“display_LCD1602” 文件夹中是这次的程序，”scheme” 文件夹中是电路图。</p>

<p>程序中使用 “Time” 库来实现定时器中断的功能，<a href="http://srmonk.blogspot.com/2012/01/arduino-timer-library.html">“Time” 库可以在这里下载</a>，如果你觉得看英文比较烦得话，可以看<a href="http://yehnan.blogspot.com/2012/03/arduino.html">这里这个中文简易教程</a>。</p>

<p>电路图：</p>

<p><img src="https://lh5.googleusercontent.com/-2ggKDjtrfuY/Uj0D_AibosI/AAAAAAAABMw/4VVXk4M1NiY/s640/Breadboard_bb.png" alt="面包板连接图" /></p>

<p><img src="https://lh3.googleusercontent.com/-P3TPBqNYi1E/Uj0D_AqZCmI/AAAAAAAABMs/KXupBqQvZj8/s576/Breadboard_schem.png" alt="电路图" /></p>

<p>结果（LCD 上，第一行为湿度和温度，第二行为距离）：</p>

<p><img src="https://lh5.googleusercontent.com/-lM53a5xTLsA/Uj0D_fkuoxI/AAAAAAAABM0/eefNICQs9Ys/s512/result.jpg" alt="结果" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[用 Arduino 测量温度和湿度]]></title>
    <link href="http://pikipity.github.io/blog/arduino-dht11-lcd1602.html"/>
    <updated>2013-09-20T22:00:00+08:00</updated>
    <id>http://pikipity.github.io/blog/arduino-dht11-lcd1602</id>
    <content type="html"><![CDATA[<p>今天中秋放假闲在宿舍里，于是就用 Arduino 做了一个测量温度和湿度的小装置，使用 DHT11 测量温度和湿度，然后用 LCD1602 来显示。</p>

<p><a href="http://wenku.baidu.com/view/bb12c7c7d5bbfd0a795673dd.html">这里有一个 DHT11 的简单介绍</a>，包括引脚的意义和解法还有一个 Arduino 的例程。DHT11 的使用还是很简单的，基本思路就是先发送给 DHT11 一个信号，将其激活，成功激活后，DHT11 会返回一个信号，之后 DHT11 就会连续发送40位的二进制数据，这40bits的数据包括湿度数值、温度数值和校检数值，其中湿度数值和温度数值都是16位的定点二进制小数（<a href="http://pikipity.github.io/blog/scm-principle-3.html">定点二进制小数在这里有介绍</a>），其中前8位为整数位，后8位为小数位，具体排列如下：</p>

<pre><code>8位湿度整数位 8位湿度小数位 8位温度整数位 8位温度小数位 8位校检数值
</code></pre>

<p>DHT11 具体操作步骤如下：</p>

<ol>
  <li>发送启动信号：拉低引脚至少18ms，拉高引脚20us到40us</li>
  <li>检测 DHT11 的返回信号：如果可以检测到一个低信号80us，然后一个高信号80us，则启动成功，进入下一步开始接受数据，否则启动失败。</li>
  <li>开始接受数据：低信号时等待下一位数据，高信号时计算高信号的宽度，如果是26us到28us，则此位为“0”，如果是70us，则此位为“1”，共40位。</li>
</ol>

<p>使用 DHT11 要注意的是：</p>

<ol>
  <li>湿度单位为“%RH”（<a href="http://zh.wikipedia.org/wiki/%E7%9B%B8%E5%B0%8D%E6%BF%95%E5%BA%A6">相对湿度</a>），温度单位为“℃”（摄氏度）。</li>
  <li>它的精度并不高，湿度误差为±5%RH，温度为±2℃。</li>
  <li>校检数值使用方法：如果湿度整数位加上温度整数位等于校检数值，那么传输无误，否则存在传输错误。</li>
  <li>采样周期不得小于1秒钟</li>
</ol>

<p>LCD1602 就简单很多了，直接使用 Arduino 自带的 “LiquidCrystal” 库就可以很轻松的进行控制了，库中所包含的函数、使用方法和例程可以到<a href="http://arduino.cc/en/Reference/LiquidCrystal">这里看 “LiquidCrystal” 官方说明文档</a>。</p>

<p>以下是我设计的电路：</p>

<p><img src="https://lh6.googleusercontent.com/-lWe2CscmyLw/Ujv5p3ZbUgI/AAAAAAAABMM/0Dv91ak3_9o/s640/Breadboard_bb.png" alt="面包板连接图" /></p>

<p><img src="https://lh6.googleusercontent.com/-aX-NkrUuHvI/Ujv5piz0TnI/AAAAAAAABMQ/bdtvWYZfm1A/s720/Breadboard_schem.png" alt="电路连接图" /></p>

<p><a href="https://github.com/pikipity/Display_Temp_and_Humi_using_LCD1602.git">程序可以到这里下载</a>。其中 “DHT11_Arduino” 文件夹中是对 DHT11 的测试，用的是串口显示测量结果，“LCD_Arduino” 文件夹中是对 LCD1602 的测试，显示的 “hello World”，“display”  文件夹中是整个的代码，”Sketch” 中是电路图和结果图。</p>

<p>最终结果如下：</p>

<p><img src="https://lh5.googleusercontent.com/-z0G7fuWmDjs/Ujv5pwiav-I/AAAAAAAABMU/OTBrKNvVwxU/s640/result.jpg" alt="结果" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[让我们一起来征服世界]]></title>
    <link href="http://pikipity.github.io/blog/introduction-to-terraria.html"/>
    <updated>2013-09-16T20:14:00+08:00</updated>
    <id>http://pikipity.github.io/blog/introduction-to-terraria</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-xBEV9XTEUq8/UjcIJFQTLzI/AAAAAAAABL0/MzrQc4KU-oU/s364/Logo.png" alt="Terraria" /></p>

<p>今天推荐一款沙盒游戏 – <a href="http://www.terraria.org/">《Terraria》</a>。“沙盒游戏”是模拟游戏的一个分支，玩家在一个大世界下自由行动，通常没有明确的目标，玩家发挥想象自由创造，例如<a href="http://www.ali213.net/zt/spore/">《孢子》</a>、<a href="http://zh.wikipedia.org/wiki/%E4%BF%A0%E7%9B%9C%E7%8D%B5%E8%BB%8A%E6%89%8B%E7%B3%BB%E5%88%97">《侠盗猎车手》</a>、<a href="https://minecraft.net/">《minecraft》</a>都属于沙盒游戏，其中<a href="https://minecraft.net/">《minecraft》</a>的超高的自由度现在应该是无人不知无人不晓了。</p>

<p>如果你知道 <a href="https://minecraft.net/">《minecraft》</a> 的话，<a href="http://www.terraria.org/">《Terraria》</a> 可以理解为 2D 的<a href="https://minecraft.net/">《minecraft》</a>，但是绝对不是等同，从资源到怪物都完全不同，故事背景就更是一点关系都没有了，唯一相同的就是极高的自由度和挖矿的重要性。如果你连 <a href="https://minecraft.net/">《minecraft》</a> 都不知道的话，看一看下面这个视频，如果你觉得发挥想象挖掘世界、创造物品挺有趣的话，那么我就及其推荐你玩一玩这款游戏，你可以充分享受自己发现世界、创造文明的乐趣。当然和 <a href="https://minecraft.net/">《minecraft》</a> 一样，可以联机和小伙伴们一起进行世界探索。</p>

<embed height="452" width="544" quality="high" allowfullscreen="true" type="application/x-shockwave-flash" src="http://static.hdslb.com/miniloader.swf" flashvars="aid=127992&amp;page=1" pluginspage="http://www.adobe.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash" />

<p>缺点也和 <a href="https://minecraft.net/">《minecraft》</a> 一样，新人入手比较困难，由于完全没有新手指南（NPC 新手向导除了会告诉你配方外还会告诉你一些小贴士，但是等你听完他的小贴士早就黑天了，然后僵尸来了，然后。。。就没然后了），新手可以到<a href="http://www.mcbbs.net/thread-4917-1-1.html">这里</a>看一看，至少可以帮助平安度过第一夜，然后就是你自由的探索了，等你遇到瓶颈的时候，可以到<a href="http://tieba.baidu.com/f?kw=terraria">贴吧</a>看一看，会很有启发的。当你将原版玩到腻了，就可以尝试打各种各样的 MOD，换种玩法继续玩。总之，这是一款一旦入手就不想放手的游戏。</p>

<ul>
  <li>Windows 用户<a href="http://tieba.baidu.com/p/2591750651">这里</a>下载（注意看安装说明，需要安装一些其他的东西）。</li>
  <li>Windows 上的有钱人可以到 <a href="http://store.steampowered.com/app/105600/">Steam</a> 上购买，联机什么的就不是问题了。</li>
  <li>Mac OS X 用户<a href="http://pan.baidu.com/share/link?shareid=1013474534&amp;uk=4080321956">这里</a>下载（原始的 dmg 找不到了就把自己的 app 压缩了一下传上来了，可能连自己的人物和世界一起打包了，将就着用吧，无法联机，需要联机的请用 <a href="http://pikipity.github.io/blog/wine.html">Wine</a>）。</li>
  <li>IOS 用户可以到<a href="https://itunes.apple.com/us/app/id640364616?mt=8">这里</a>下载</li>
  <li>Andriod 用户可以到<a href="https://play.google.com/store/apps/details?id=com.and.games505.Terraria">这里</a>下载</li>
</ul>

]]></content>
  </entry>
  
</feed>
