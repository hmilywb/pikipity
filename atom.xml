<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[折腾来折腾去]]></title>
  <link href="http://pikipity.github.com/atom.xml" rel="self"/>
  <link href="http://pikipity.github.com/"/>
  <updated>2013-01-30T00:00:00+08:00</updated>
  <id>http://pikipity.github.com/</id>
  <author>
    <name><![CDATA[pikipity]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[愚人节快乐！]]></title>
    <link href="http://pikipity.github.com/blog/happy-april-fools.html"/>
    <updated>2013-04-01T18:50:00+08:00</updated>
    <id>http://pikipity.github.com/blog/happy-april-fools</id>
    <content type="html"><![CDATA[<p>大好的愚人节，Google当然不会放过，一起来看看 Google 又放出了哪些愚人节特别项目吧 O(∩_∩)O</p>

<h3 id="google-map-">Google Map 藏宝图模式</h3>

<p><img src="https://lh3.googleusercontent.com/-ftlXpynzbeE/UVl2_57igtI/AAAAAAAAAoU/gkau5SGx-8I/s800/Screen%2520Shot%25202013-04-01%2520at%25207.52.26%2520PM.png" alt="Google Map 藏宝图模式" width="480" /></p>

<p>今天，大家可以在 Google Map中切换到藏宝图模式。开启之后，整个地图变为了古旧的欧式藏宝图风格，街道、国界分界什么全部消失，只剩下一些树木、山峰和标志性地标物。街景模式也变了，变为从一个望远镜里看到的古旧老照片。到<a href="http://maps.google.com.hk/maps?hl=en&amp;tab=wl">这里</a>来体验一下，据说真的有隐藏宝藏哦！！（什么都没找到？那个，你可以和视频里学一学，放到火上烤一烤怎么样？）</p>

<p><img src="https://lh5.googleusercontent.com/-Eevt4yaCNwg/UVl2_9OoobI/AAAAAAAAAoY/DVLh3x-pNL8/s800/Screen%2520Shot%25202013-04-01%2520at%25206.48.38%2520PM.png" alt="藏宝图里的澳门大学" width="480" /></p>

<embed src="http://www.tudou.com/v/n1hyncm52ys/&amp;resourceId=103356984_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

<h3 id="youtube-">Youtube 其实是一个规模宏大的视频比赛！！</h3>

<p>经过八年收集参赛作品，从今天起，Youtube 不再接受新的投稿，接下来，Youtube 的三万人评审团将会选出一个胜出视频，届时其他视频都将消失掉了！！</p>

<embed src="http://www.tudou.com/v/EdcwhD3ae4k/&amp;resourceId=103356984_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

<h3 id="gmail-blue">Gmail Blue</h3>

<p>历史六年研发，新的 Gmail 诞生了，全蓝色 Gmail – Gmail Blue！！(╯▽╰)</p>

<embed src="http://www.tudou.com/v/Cm59Hhc9dto/&amp;resourceId=103356984_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

<h3 id="section">吧啦吧啦版日语输入法</h3>

<p><img src="https://lh5.googleusercontent.com/-5t1K9KWaxWE/UVl8RVcSQII/AAAAAAAAAoo/sFaDO3gh6ZI/s800/Screen%2520Shot%25202013-04-01%2520at%25208.22.55%2520PM.png" alt="吧啦吧啦版日语输入法" width="480" /></p>

<p>这个是真的可以用的哦，到<a href="http://www.google.co.jp/ime/patapata/message.html">这里</a>就可以用了。模拟摩尔斯电码的形式，只需要敲击一个键就可以输入英文、日语、字符表情。但是貌似是这样，你需要的超强的记忆力或者电光火石一样的反应力，就是这样。（话说，那个打字眼睛不错哦，对于不会盲打的亲们很适合哦！！）</p>

<embed src="http://www.tudou.com/v/yKdicT_4Wnk/&amp;resourceId=103356984_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

<h3 id="google-">Google 嗅觉</h3>

<p>这个作为压轴，因为这是最有意思的了，现在，Google 允许你通过气味进行搜索，并可以在结果中提供搜索结果的气味，快到<a href="http://www.google.com/intl/zh-TW/landing/nose/">这里</a>开始 Google 的嗅觉搜索吧（Google 提醒您：如要查詢較為敏感的內容，請啟用安全搜尋以防萬一。你是不是想歪了 (╯▽╰)）。希望大爷您愚人节玩的开心 (have fun)！！</p>

<embed src="http://www.tudou.com/v/PXEZRBe-0Cc/&amp;resourceId=103356984_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你真的懂 Excel 么？]]></title>
    <link href="http://pikipity.github.com/blog/excel-game.html"/>
    <updated>2013-03-31T11:46:00+08:00</updated>
    <id>http://pikipity.github.com/blog/excel-game</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/-UlxnYCvwxMM/UVe59_pmBZI/AAAAAAAAAnc/Wmuz-QC1iBI/s550/5153b5fd15930.png" alt="Excel RPG" width="550pt" /></p>

<p>是的，你没有看错，一名加拿大会计师 Cary Walkin 用 Excel 做了一个 RPG 游戏 Arena.Xlsm。可在 Excel 2007、Excel 2010、Excel 2013 版本中运行，游戏虽然不大，只有 1M 大小，但是内容并不输给一般的 RPG 游戏：</p>

<ul>
  <li>超过 2000 种随机生成的敌人；</li>
  <li>超过 1000 种物品可组成39种物品组合；</li>
  <li>8 个 BOSS,4个不同的结局；</li>
  <li>4 个区域供玩家探索；</li>
  <li>31 种法术技能；</li>
  <li>15 种独特物品，具有独一无二的属性；</li>
  <li>36 项成就。</li>
</ul>

<p>看着就很想玩了吧，可以到<a href="http://pan.baidu.com/share/link?shareid=428267&amp;uk=4080321956">这里</a>下载。我认为这件事可以告诉我们两点：</p>

<ol>
  <li>编程什么的貌似谁都可以学会嘛！</li>
  <li>学会计的貌似很闲嘛！</li>
</ol>

<p><img src="https://lh3.googleusercontent.com/-hO807qyDQoY/UVe1xV7uKPI/AAAAAAAAAm4/RRZ626Cn6cw/s520/Screen%2520Shot%25202013-03-31%2520at%252012.02.57%2520PM.png" alt="Excel 三国杀" width="550pt" /></p>

<p><img src="https://lh4.googleusercontent.com/-8krewItCKJU/UVe1xeyvn5I/AAAAAAAAAm0/P7PrgT_re08/s523/Screen%2520Shot%25202013-03-31%2520at%252012.03.36%2520PM.png" alt="Excel 三国杀" width="550pt" /></p>

<p>另外一个是已经很出名的 Excel 三国杀，已经有了PC、Android、IOS 三个版本，快点下载来试试吧。点<a href="http://www.mafengwoo.com/">这里</a>去官网。</p>

<p>所以说，不要再说你会 Excel 了，山外有山，人外有人。现在用 Latex 用的，打开 Word 都不晓得怎么用了，更不要说 Excel 了，我还是研究研究怎么用 Python 读取和写入 Excel 比较靠谱吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[贫嘴的鞋子]]></title>
    <link href="http://pikipity.github.com/blog/talking-shoe.html"/>
    <updated>2013-03-29T02:24:00+08:00</updated>
    <id>http://pikipity.github.com/blog/talking-shoe</id>
    <content type="html"><![CDATA[<p>Google在SXSW 2013大会上展示了叫做 “Talking Shoe” 的运动鞋，下面是一个宣传视频。</p>

<embed src="http://player.youku.com/player.php/sid/XNTI0NjM0NzQw/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

<p>有没有发现，神烦啊，我穿个鞋子而已，做什么，记录我的一举一动，还要发微博？不，我相信，那一定不是微博，那一定是 Google+，绝对是。听听那怪蜀黍一样的怪异声音（要是谷歌娘的声音我就不发出来吐槽了）：</p>

<ul>
  <li>在你站着不动的时候他会说：如果站着不动也是项运动的话，你丫肯定是世界冠军了！</li>
  <li>在你坐着不对的时候他会说：真他娘的无聊啊！</li>
  <li>在你走起来的时候他会说：开始带点感了啊！</li>
  <li>在你小跑起来的时候他会说：我喜欢这种威风吹过脸庞的感觉！</li>
  <li>在探测到你走入街头篮球场的时候他会说：上啊！</li>
  <li>当你完全运动起来的时候他会说：快打119啊你丫太火了！</li>
  <li>在你运动完休息的时候他会说：重新穿上我让咱们再战一场啊！</li>
</ul>

<p>相信我，即使倒贴我钱我也不会要这样鞋子的，因为它会永远只说一句话:</p>

<blockquote>
  <p>This is super boring !</p>
</blockquote>

<p>但是相信我，不是我 boring，是 Google 你闲着没事干了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[震动的 ipad，你可以想象么？]]></title>
    <link href="http://pikipity.github.com/blog/vibrator-ipad.html"/>
    <updated>2013-03-29T01:53:00+08:00</updated>
    <id>http://pikipity.github.com/blog/vibrator-ipad</id>
    <content type="html"><![CDATA[<p>苹果公司发布了一项了与 ipad 有关的专利，是关于支持振动器的音频编解码器。一个双频道编码译码器通常有两个输出引线，在立体声模式中可用来驱动两个扬声器，或者是在单声道模式下驱动一个振动器和一个扬声器。每个频道都有自己的数字 - 模拟转换器以及音频功率放大器，接收声频信号，驱动扬声器。这项专利能让 iPad 像 iPhone 那样，获得振动模式，拥有消息提醒功能。这项专利的发明人是 Timothy Johnson。</p>

<p><img src="https://lh4.googleusercontent.com/-3T2VZxwjuzc/UVSCp1f4oYI/AAAAAAAAAmU/sw9uAy2OWws/s512/6a0120a5580826970c017ee99cdeeb970d-800wi.jpg" width="550pt" /></p>

<p><img src="https://lh5.googleusercontent.com/-DTf1MOTRZAM/UVSCpxhpReI/AAAAAAAAAmQ/dbgBi8aqPe4/s800/6a0120a5580826970c017ee99cdc4b970d-800wi.jpg" width="550pt" /></p>

<p>但是让 ipad 震动起来真的大丈夫？不会震坏么（我是说桌子 (╯﹏╰) ）？那么大的玩意在桌子上如果真的震起来会不会和发生地震一样啊？我很好奇 ( ⊙o⊙ ) ~~~~~~~~</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[那年我还是个纯真的小男孩 -- 《唐老鸭大冒险》]]></title>
    <link href="http://pikipity.github.com/blog/duck-tales-2.html"/>
    <updated>2013-03-28T22:38:00+08:00</updated>
    <id>http://pikipity.github.com/blog/duck-tales-2</id>
    <content type="html"><![CDATA[<p><img src="http://pikipity.github.com/images/post/DuckTales2.jpg" alt="唐老鸭大冒险 2" width="350pt" /></p>

<p>听到这个名字好像回忆不起来是什么了，但是看了上面的截图你要是再想不起来，就真的是没有童年了，当年红白机（也就是小霸王啦）上无敌好玩的解密游戏。玩家控制唐纳德在五个不同的地域寻找宝藏，每个地图可以重复进出，最终目标是找齐隐藏地图，打败最终 BOSS，其中包含了大量的解密元素和隐藏要素，不是对地图超级熟悉经常在里面迷路，如果说一个大型迷宫可以迷路也就算了，一个横版过关也可以迷路，这个游戏真的是逆天的无敌有没有。小时后无限手残啊，一个地图打一天都过不了啊，很是怀念啊。</p>

<p>为什么今天突然拿出这个来说呢，因为我看到《唐老鸭大冒险》竟然要出复刻版了，预计会在今年夏季登陆Wii U、XBOX360 以及 PS3 平台。先看一下宣传视频吧，很是期待啊，貌似多了很多关卡啊。</p>

<embed src="http://player.youku.com/player.php/sid/XNTMwOTUyOTI0/v.swf" quality="high" width="480" height="400" align="middle" allowscriptaccess="sameDomain" allowfullscreen="true" type="application/x-shockwave-flash" />

<p>没关系，对于我们这些没有高端设备的人，可以下个红白机虚拟器在电脑上玩一下老版，回一下童年也是很不错的嘛。对于我们这些手残党，也可以看一下<a href="http://space.bilibili.tv/374377">“岚少”</a>的视频娱乐一下嘛，日文全翻译，很好的。</p>

<embed src="http://player.youku.com/player.php/sid/XNTI4OTAwMTc2/v.swf" allowfullscreen="true" quality="high" width="480" height="400" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[通过几何概型来估算&pi;]]></title>
    <link href="http://pikipity.github.com/blog/find-pi.html"/>
    <updated>2013-03-28T07:52:00+08:00</updated>
    <id>http://pikipity.github.com/blog/find-pi</id>
    <content type="html"><![CDATA[<p><img src="http://pikipity.github.com/images/post/find_pi.jpg" alt="几何概型估算&pi;" width="550pt" /></p>

<p>被涛神要求帮着写了一个通过模拟几何概型实验来估算 π 的 Matlab 函数。这个几何概型的实验是这样的：在一个二维直角坐标系中，存在一个以原点为中心，以1为半径的圆，和一个以原点为中心，边长为2的正方形（如图），向圆中随机投放点，计算此点在圆内的概率（忽略边线）我们可以得到如下公式，</p>

<script type="math/tex; mode=display">% &lt;![CDATA[
\begin{array}{rcl}
P&=&\frac{S_{circle}}{S_{square}}\\
&=&\frac{\pi r^2}{\left( 2r\right)^2}\\
&=&\frac{\pi}{4}
\end{array} %]]&gt;</script>

<p>所以我们只要将上面得到的概率乘以4，就可以估算出 π 的值。很明显，既然是概率实验，那么存在一次试验中使用点的个数问题，使用的点越多，理论上得到的 π 的值应该越接近真实值。</p>

<p>涛神希望这个函数实现下面几点要求：</p>

<ol>
  <li>可以一次性通过一个矩阵输入多次实验，每次实验中使用的点数不一样。</li>
  <li>将多次实验所得到的 π 的值放在一个矩阵里进行输出。</li>
  <li>使用 <code>rand</code> 函数。</li>
  <li>不使用循环。</li>
</ol>

<p>由于 <code>rand</code> 的函数无法一次性产生多个二维随机数矩阵，又由于不能使用循环，使得这个函数的编写比较麻烦（吐槽一下，即使可以产生多个二维随机数矩阵我也没法进行后续操作啊！！）。于是我的想法如下：</p>

<ol>
  <li>根据最大的点数，用 <code>rand</code> 函数产生一个三维矩阵，前两个维度分别表示每个点的横纵坐标，最后一个维度表示第几次实验。例如，如果进行三次试验，每次试验的实验点数为1，10，100，那么就用 <code>rand</code> 生成一个100*2*3的随机矩阵。</li>
  <li>根据所需要的不同实验中不同的点数对实验结果进行取样。继续上面的举例，我们就在第一个试验的结果（如果结果存在矩阵 <code>a</code> 中，那么实验一的结果也就是 <code>a(:,:,1)</code>）中只使用第一组数据，在第二个实验的结果中只使用前10组数据，在第三个实验的结果中只使用前100组数据。</li>
  <li>通过上面的理论公式，计算得到结果，并输出。</li>
  <li>在整个过程中，使用 <code>reshape</code> 函数进行二维和三维矩阵之间的转化。</li>
</ol>

<p>程序如下：</p>

<pre><code>function y=find_pi(n)
%y=find_pi(n)
%input: n, a array for number of experiments, like [10 100 1000]
%output: y, the approximate value of pi for every experiment

%generate the matrix that will be used to sample results
sample=triu(ones(max(n),max(n)),0);
sample=sample(1:end,[n;n]);
sample=reshape(sample,max(n),2,length(n));
%generate the data matrix
total_number_exp=length(n);
maximum=max(n);
all_experiment=rand(maximum,2,total_number_exp);
%sample results
all_experiment=all_experiment.*sample;
%calculate value of pi
final_experiment=(all_experiment.*2-1);
final_result=sum(final_experiment.^2,2);
y=sum(final_result&lt;1)./reshape(n,1,1,length(n));
y=reshape(y,[1,length(y)]).*4;
</code></pre>

<p>主要用到下面几个常用函数：</p>

<ol>
  <li><code>triu(ones(n,n),0)</code>: 生成一个单位矩阵的上三角矩阵，其中 <code>n</code> 必须是一个正整数。</li>
  <li><code>reshape</code>: 根据需要将矩阵重建为与原矩阵不同维数的矩阵。</li>
  <li><code>rand</code>: 从0到1中抽取随机数生成矩阵。</li>
  <li><code>sum</code>: 求和，可以根据括号中的条件计算符合条件的点的个数。</li>
</ol>

<p>用 <code>y=find_pi([100 1 10 1000])</code> 进行四次测试，结果为 <code>[3.0800 0 3.6000 3.0800]</code>，<code>[3.3200 4.0000 3.2000 3.2240]</code>, <code>[3.3200 4.0000 3.2000 3.1640]</code> 和 <code>[3.3200 4.0000 2.8000 3.0880]</code>，运行正常，结果看起来是真确的啦。</p>

<p>存在一个问题，当运行实验点数较多的情况，比如10000次的时候，函数会卡死，但是把函数语句单独提出来使用一切正常，只是会有小卡顿，看来是我的小 MBP 内存不够了。但是问题还是很明显的，不论最小的点数是多少，都要至少产生两个以最大点数为基础的大矩阵来运算，实在是太浪费了，但是不让使用循环，浪费就浪费吧。函数已放在<a href="https://github.com/pikipity/Find-pi">我的 Github</a>，欢迎来 Fork 我，谢谢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google要成立博物馆了？]]></title>
    <link href="http://pikipity.github.com/blog/googleartproject.html"/>
    <updated>2013-03-27T23:24:00+08:00</updated>
    <id>http://pikipity.github.com/blog/googleartproject</id>
    <content type="html"><![CDATA[<p>今天在网上搜索 <a href="https://www.google.com/search?q=google+project+glass&amp;aq=0&amp;oq=google+project&amp;aqs=chrome.0.0j57j65l3j0.4384&amp;sourceid=chrome&amp;ie=UTF-8#hl=en&amp;safe=active&amp;sclient=psy-ab&amp;q=google+project&amp;oq=google+project&amp;gs_l=serp.3..0i20j0l3.615.2967.0.4103.8.8.0.0.0.1.1619.3694.3j1j1j8-2.7.0...0.0...1c.1.7.psy-ab.EQaeD3OJNhU&amp;pbx=1&amp;bav=on.2,or.r_cp.r_qf.&amp;bvm=bv.44342787,d.aGc&amp;fp=f7d9c8fbbb7e8602&amp;biw=1280&amp;bih=728">“Google project”</a> 竟然发现了这样的一个网站 – <a href="http://www.googleartproject.com/zh-cn/collections/">“Art Project”</a>。</p>

<p><img src="http://pikipity.github.com/images/post/googleartproject.jpg" alt="Google Art Project" width="550pt" /></p>

<p>里面共收录214个博物馆中8366位艺术家的39859件作品的照片，最让我惊异的是我看到了<strong>“湖南省博物馆”</strong>，但是貌似只有这一个中国博物馆而已，里面的展品也只有50件。</p>

<p><img src="http://pikipity.github.com/images/post/googleartproject_1.jpg" alt="名单中的湖南省博物馆" width="550pt" /></p>

<p>侧边条允许“查找”、“添加到陈列室”（就是添加到自己账户的收藏里）、“分享”和“幻灯片演示”。“分享”仅支持”Google+”、“Facebook”、“Twitter”和“电子邮件”，中国人常用的社交网络就没有了，但是可以直接分享页面网址（这有个毛用，要网址我直接在地址栏里复制就好了，干嘛还要点你的侧边栏）。</p>

<p><img src="http://pikipity.github.com/images/post/googleartproject_2.jpg" alt="侧边栏" width="350pt" /></p>

<p>点进艺术品后可以放大，但是仅仅就是放大图片而已，如果图片不清晰，放大也就不清晰了。还可以查看“详细资料”，但是我看了三四个，都是什么都没有，哎，就这样吧，可怜兮兮的。</p>

<p><img src="http://pikipity.github.com/images/post/googleartproject_3.jpg" alt="香港艺术博物馆的 Crisp air in mountains and lakes（还是有高清大图的）" width="550pt" /></p>

<p>总的来看这个 “Google Art Project” 要想获得广泛认可和认知还需要点时间，但是既然 Google 连 Reader 都杀了，说不定这个玩意儿哪天也就没了，趁着还在，上去看看那些艺术品吧，尽管只是照片而已。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[环保？文明？我们的地狱？]]></title>
    <link href="http://pikipity.github.com/blog/2013-earth-hour.html"/>
    <updated>2013-03-22T18:51:00+08:00</updated>
    <id>http://pikipity.github.com/blog/2013-earth-hour</id>
    <content type="html"><![CDATA[<p><img src="http://pikipity.github.com/images/post/60+CN_logo.jpg" width="550pt" /></p>

<p>2013年2月23日星期六，晚上8:30到9:30是一年一度的<a href="http://earthhour.wwf.org.hk/">“地球一小时”</a>活动，<a href="https://zh.wikipedia.org/wiki/%E5%9C%B0%E7%90%83%E4%B8%80%E5%B0%8F%E6%97%B6">“Wiki”</a> 上是这么说的:</p>

<blockquote>
  <p>地球一小时（英语：Earth Hour）是一个全球性节能活动，提倡于每年三月的最后一个星期六当地时间晚上20:30，家庭及商界用户关上不必要的电灯及耗电产品一小时。希望借此活动推动电源管理，减少能源消耗，唤起人们以实际行动应对全球变暖的意识。</p>

  <p>该活动最初由环保团体世界自然基金会澳洲及悉尼晨锋报合作发起，并于澳洲悉尼当地时间2007年3月31日，晚上8:30至9:30期间举行了第一次活动。地球一小时2007有近220万人参与，相信节省了当天悉尼市市电电源的2.2%至10.2%。2008年，该活动被推广到世界各地，全球40多个城市，近380个城镇接力执行该活动。</p>
</blockquote>

<p>玩过《海岛大亨》的同学们都知道，环保主义者什么的最讨厌了~~~~~~。我当然不是反对环保，但是人类文明的进步本身就是对环境掠夺的过程，当这种掠夺超过环境承受能力，那么就被我们称为“破坏生态环境”。但是人类发展如此迅速，怎么不可能超过环境的限制。更何况科技发展到今天，电力带来的污染已经可以说是一直在降低了，更重要的是其他污染因素。其实我想吐槽的是下面的视频，一小时发电厂产生的污染如果和生产你们用的那些荧光灯里的纽扣电池的污染比起来可以说是小巫见大巫了，这样真的“大丈夫”？</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/2UywrjnOaUE" frameborder="0" allowfullscreen=""></iframe>

<p>不管怎么说，还是要宣传一下环保的，从小事做起就好了，下面是<a href="http://www.earthhour.org.cn/index.php">“我做绿V客”</a>的宣传海报，这个活动还是不错的</p>

<p><img src="http://pikipity.github.com/images/post/print-ad.jpg" width="550pt" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[海盗湾里最老的种子]]></title>
    <link href="http://pikipity.github.com/blog/thepiratebay-ten-years-old.html"/>
    <updated>2013-03-18T20:49:00+08:00</updated>
    <id>http://pikipity.github.com/blog/thepiratebay-ten-years-old</id>
    <content type="html"><![CDATA[<p>为了庆祝 <a href="http://thepiratebay.se/">“海盗湾”</a> 今年十岁，<a href="http://torrentfreak.com/the-pirate-bays-oldest-torrent-is-revolution-os-130317/?utm_source=dlvr.it&amp;utm_medium=twitter">“TorrentFreak”</a> 网站找到了在湾里漂泊最久的一个种子 – <a href="http://thepiratebay.se/torrent/3211770/Revolution_OS">《操作系统革命》</a>。<a href="http://zh.wikipedia.org/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%9D%A9%E5%91%BD">“维基”</a>上是这么说的：</p>

<blockquote>
  <p>《操作系统革命》（Revolution OS）是一部2001年由J·T·S·摩尔（J. T. S. Moore）导演的纪录片电影，该电影追述了GNU、Linux、自由软件运动以及开放源代码运动长达二十余年的历史。该片的主演有理查德·斯托曼、林纳斯·托瓦兹、布鲁斯·斐伦斯、拉里·奥古斯丁与埃里克·雷蒙等。</p>
</blockquote>

<p>微软首席执行官史蒂夫·鲍尔默(Steve Ballmer)不是说过么：</p>

<blockquote>
  <p>Linux就是癌症</p>
</blockquote>

<p>就让这个癌症来的更猛烈些吧。</p>

<p>最后，让我们来瞻仰一下那些为了自由软件与开源代码付出毕生精力的大神们吧。</p>

<embed src="http://www.tudou.com/v/Nbz3C92uFuQ/&amp;resourceId=0_05_02_99&amp;tid=0/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[可能真的是我们被 Google 宠坏了]]></title>
    <link href="http://pikipity.github.com/blog/google-reader-user.html"/>
    <updated>2013-03-18T10:04:00+08:00</updated>
    <id>http://pikipity.github.com/blog/google-reader-user</id>
    <content type="html"><![CDATA[<p>转自<a href="http://www.guao.hk/">“谷奥”</a> Kunkka 的<a href="http://www.guao.hk/posts/is-google-doing-evil-for-closing-google-reader.html">“关闭 Google Reader 是作恶之举？”</a>。</p>

<p>Google Reader将要被关闭，大家都很不爽，因为又一个好服务即将离我们而去。</p>

<p>可是惋惜归惋惜，我只是觉得，人应该要感恩，毕竟Google做的已经够多了：它已经无偿地为大家运营了这么一个服务8年。8年了，这个服务没从大家手中拿过一分钱！说白了，就是Google不欠大家什么，即使它关闭Google Reader这个举动再不高明，它还是不欠用户们什么东西。</p>

<p>但是看到那么多人，甚至包括站长也说关闭Google Reader就是作恶，我瞬间就不淡定了。这都啥跟啥嘛，难道粉了Google这么多年的人，连这种基本东西都没搞清楚吗？虽然Google Reader被关闭，确实值得惋惜，但是这跟“作恶”有什么关系吗？是不是弄得你不爽了，就是Google作恶了？</p>

<p>举个简单的例子就是：关闭Google Reader，在我看来，几乎就跟楼下大街上生意不红火的小吃店关门大吉一般，正常的不能再正常。人们可以因为再吃不到既便宜牛肉又给得多的牛肉面而惋惜，但是人们却不会（也不应该）因为老板不再为他们提供这么良心的牛肉面而去谴责老板。</p>

<p>另外，Google自己说的“不作恶”，从来就是指的，赚钱不必作恶；从来就是指的，他们不会对竞争对手用下三滥的手段；从来就是指的，他们不会像别的公司那样，用欺骗，用劫持流量的办法来赚钱。关于这段，<a href="http://www.google.com/about/company/philosophy/">可以看官方页面的第6条</a>。</p>

<p>那么，关闭Google Reader从哪里能说的上是作恶？难道关闭Google Reader这服务就是一种下三滥手段，就是用来排挤竞争对手，就是用来赚亏心钱的？</p>

<p>我一直认为Google是一家有道德，有些许理想主义，有些许天马行空的公司。这是我一直热爱Google的原因。而从关闭GR这事来看，Google提供数据导出方案，提供缓冲时间让用户过渡。我看不出这些做法哪里不道德。这个关闭行动之中，Google的行为合乎法律、合乎情理、合乎道德。虽然关闭GR让我不爽，但是我没法说服自己改变对Google的看法，因为道德还在，理想主义与天马行空依然。</p>

<p>Google还是那个Google，它没变，变的只是人心，被宠坏的人心。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Google Reader 将死，我们要何去何从？]]></title>
    <link href="http://pikipity.github.com/blog/google-reader-die.html"/>
    <updated>2013-03-16T23:15:00+08:00</updated>
    <id>http://pikipity.github.com/blog/google-reader-die</id>
    <content type="html"><![CDATA[<p><img src="http://pikipity.github.com/images/post/google_reader_die.jpg" width="650pt" /></p>

<p>Google 将于<strong>7月1日</strong>关闭 Google Reader 服务已经是大街小巷都知道的新闻了，那天听见同学告诉我这个消息，惊得我心都跳出来了，Google 算你狠，给自己儿子整了个容，结果整成一个半残废就准备直接杀了吃，虎毒尚且不食子，虽然你已经阉割了那么多的儿子，但是那些儿子天生畸形，杀了也就算了，Google Reader 天生丽质，杀他做什么。元首都怒了，Google 你等着，“杀 Reader，壮 Plus” 的司马昭之心我们都懂的好么，不要在找借口了，元首会代表月亮消灭你的。好了，不胡扯了，面对现实，看看现在的我们这些 Google Reader 用户还能做些什么吧。</p>

<embed src="http://www.tudou.com/v/E-0gCwx3TL0/&amp;resourceId=48778612_05_02_99/v.swf" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" wmode="opaque" width="480" height="400" />

<h2 id="section">请愿</h2>

<p>大家可以到 <a href="http://keepgooglereader.com/">keepgooglereader.com网站</a> 或是 <a href="https://www.change.org/petitions/google-keep-google-reader-running">change.org</a> 参加联名请愿活动，到现在为止，<a href="http://keepgooglereader.com/">keepgooglereader.com网站</a> 上已经有 33425 人参加，<a href="https://www.change.org/petitions/google-keep-google-reader-running">change.org</a> 上有119,339人参加，但是看样子会被 Google 这个腹黑的家伙直接无视掉，还记得11年的改版么，不也是一群人的请愿，最终不也是无疾而终.</p>

<p><img src="http://pikipity.github.com/images/post/google_reader_die-1.jpg" width="550pt" /></p>

<p>或者干脆等待美国人民展现强大的凝聚力，凑集超过10万人提名，这样美国国会就必须受理并给个说法，美国3亿人民啊，上吧，展现你们正义的力量的时候到了，让 Google 放下屠刀立地成佛吧~~</p>

<p>囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧囧</p>

<h2 id="section-1">转战其他产品</h2>

<p>既然不能放弃 RSS，那就用其他的订阅吧，但是要找到一款可以在网页上直接浏览，还可以通过客户端浏览，并且 IOS 上还有客户端的简单好用功能全的 RSS 产品实在是太难了，于是本着免费账号无限取的基本思想原则，我决定一个一个试过来再说。</p>

<h3 id="section-2">国内产品</h3>

<p>国内的 RSS 订阅服务还是很多的，但是据说优良参差不齐，很让人担忧啊。只测试了几个口碑比较好的在线阅览器。经过一番测试后，我认为，<a href="http://xianguo.com/">鲜果</a>可能是最好的了，<a href="http://readwise.net/">美味阅读</a>最华丽值得期待，以下是具体信息。</p>

<ol>
  <li>
    <p>鲜果</p>

    <p><img src="http://pikipity.github.com/images/post/xianguo.jpg" width="550pt" /></p>

    <p><a href="http://xianguo.com/">鲜果</a>算是国内比较执着的 RSS 在线阅览器了，一直踏踏实实的做着一个身为 RSS 订阅器应做的本分，整个界面整洁干净，可以说是没有什么杂余。基本功能也都一应俱全：分享、加星、导入导出、显示已读未读。现在看 Google Reader 将死，想赶紧抢一碗羹，加入 “Take In” 功能，可以一键导入 Google Reader 的订阅，但是导入后好像有点问题，我有这么多未读么？不会吧，加星和已读都没有导入，这也导入的太不彻底了~~~~~。<a href="http://app.xianguo.com/lianbo/">鲜果联播</a>可以同步 RSS 源，且具有 ipad、iphone、Android、Win8、WP8 版本，没有发现 Mac 上可以进行同步的软件。</p>

    <p>如果你想转战国内的 RSS 在线阅览器，这是我的首推！！！</p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>分享、加星、导入导出、显示已读未读、文件夹分类，基本功能一应俱全</li>
          <li>界面整洁干净，没有杂余</li>
          <li>可以一键导入 Google Reader</li>
          <li>具有 ipad、iphone、Android、Win8、WP8 客户端，可以随时阅览</li>
        </ul>
      </li>
      <li>
        <p>缺点：</p>

        <ul>
          <li>只导入 Google Reader 的订阅源，加星和已读标记全部丢失</li>
          <li>没有发现 Mac 上可以进行同步的软件</li>
        </ul>
      </li>
      <li>
        <p>推荐指数：♥♥♥♥♥</p>
      </li>
    </ul>
  </li>
  <li>
    <p>抓虾</p>

    <p><img src="http://pikipity.github.com/images/post/zhuaxia.jpg" width="550pt" /></p>

    <p><a href="http://www.zhuaxia.com/">抓虾</a>也是国内的一个老牌 RSS 在线浏览器了。从上面截图可以看到，我没有导入 Google Reader 订阅，是为什么呢？因为我压根没有找到直接导入 Google Reader 数据的地方，好吧，我可以手动导入，那么我老老实实的手动导入，但是，这是什么，这是什么啊</p>

    <pre><code>	OPML导入
 抓虾在上传OPML文件 “subscriptions.xml” 中遇到错误。
 
 错误原因：
 
 抓虾建议你：

 查查输入的OPML文件是否正确，然后重试
 返回我的频道。
</code></pre>

    <p>导入错误！！！！！！你耍我的吧，你不想混了吧，你不知道 Google 再杀自己儿子啊，你不知道现在大家都在争着一碗羹啊，什么，你说你不想抢，好吧，我只能说：</p>

    <blockquote>
      <p>抓虾，你赢了！囧</p>
    </blockquote>

    <ul>
      <li>优点：…………………………</li>
      <li>缺点：根本无法导入 Google Reader 订阅源，这还有什么好说的</li>
      <li>推荐指数：囧</li>
    </ul>
  </li>
  <li>
    <p>有道阅读</p>

    <p><img src="http://pikipity.github.com/images/post/youdao.jpg" width="550pt" /></p>

    <p>看了上面的图片你一定想问：图片，你肿么了？放心，有道怕你订阅的东西中图片过于刺激，帮你全部屏蔽掉了~~~~~~~~~~~~ 囧。既然你可以”从其他阅读器导入”，那就是说明你也想瓜分 Google Reader 喽，那你的这种图片显示方法，你是要闹哪样，要闹哪样啊~~~~~~~~~~~ 囧。网站在<a href="reader.youdao.com/">这里</a>，说实在的，你还去做词典比较靠谱。</p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>分享、加星、导入导出、显示已读未读、文件夹分类，基本功能一应俱全</li>
          <li>可以一键导入 Google Reader</li>
        </ul>
      </li>
      <li>
        <p>缺点：</p>

        <ul>
          <li>图片显示不正常</li>
          <li>未发现客户端</li>
        </ul>
      </li>
      <li>
        <p>推荐指数：♥♥</p>
      </li>
    </ul>
  </li>
  <li>
    <p>网易云阅读</p>

    <p><img src="http://pikipity.github.com/images/post/yunyuedu.jpg" width="550pt" /></p>

    <p>是的，你没看错，网易不止有“有道”还有<a href="http://yuedu.163.com/">“云阅读”</a>。但是不愧是一家人，图片一律无法显示，网易你搞什么，这难道是我电脑的问题么，不要闹了，不准备到碗里来，就不要摆一个这么好的姿势，弄一个“添加 Google Reader”就以为可以吸引 Google 用户啦，想得美啊。说实话，感觉还不如“有道”，人家还有个文件夹分类，你什么也没有，搞什么。</p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>具有分享、加星、导入导出、显示已读未读等基本功能</li>
          <li>界面算是华丽啦</li>
          <li>可以一键导入 Google Reader</li>
        </ul>
      </li>
      <li>
        <p>缺点：</p>

        <ul>
          <li>图片显示不正常</li>
          <li>没有文件夹分类</li>
          <li>客户端着重的是“读书”部分，我真心不想读你那些网络垃圾小说，别这样，我只是想要个 RSS 而已</li>
        </ul>
      </li>
      <li>
        <p>推荐指数：♥</p>
      </li>
    </ul>
  </li>
  <li>
    <p>美味爱读</p>

    <p><img src="http://pikipity.github.com/images/post/meiweiaidu.jpg" width="550pt" /></p>

    <p>据说是用 Youtube 创始人陈士俊公司 AVOS 研发的，有 iOS 和 Android 客户端。由于还在测试，没法注册新用户，需要用户发送邀请邮件来邀请，但是“新浪微博”、“豆瓣”、“推特”和“Google+”的用户可以直接绑定账户登陆。<a href="http://readwise.net/">美味爱读</a>的华丽程度绝对超越“网易云阅读”好几条街，自带标签，而且标签种类丰富，大多是都是技术宅感兴趣的标签，粗略的看了一下标签里订阅源的内容，发现还是很不错的，没有那些为了吸引用户而弄得无聊信息，由于我选择了“接受英文信息”，所以大部分标签都是英文，但是内容真的很好，要是我不是舍不得我从前的订阅，说不定现在就完全进入“美味阅读”的怀抱了。</p>

    <p>可以一键导入 Google Reader 的订阅，但是导入之后发现很多订阅都丢失了，让人很无语。而且订阅没有已阅读和未阅读的区分，没有文件夹分类，还让我发现了更无语的是出现了下面的提示信息：</p>

    <p><img src="http://pikipity.github.com/images/post/wrong.jpg" width="550pt" /></p>

    <p>但是想想还在测试的话，还是一款很值得期待的产品，毕竟从“标签”这个功能上看，还是诚意满满的嘛。</p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>有 iOS 和 Android 客户端</li>
          <li>界面超级华丽，我都不想当它是 RSS 阅览器了</li>
          <li>自带标签功能，内容很好</li>
          <li>可以一键导入 Google Reader</li>
        </ul>
      </li>
      <li>
        <p>缺点：</p>

        <ul>
          <li>导入 Google Reader 后部分订阅丢失，部分订阅无法打开，不知道之后是否可以正常导入</li>
        </ul>
      </li>
      <li>
        <p>推荐指数：</p>

        <ul>
          <li>作为 Google Reader 替代品的话：♥</li>
          <li>单纯作为另外一个信息来源的话：♥♥♥♥♥</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>Yahoo、QQ mail 好像都是在邮箱里面浏览，让我想想，我的 Gmail 挺好了，我真心不想再要邮箱了，我只是想要个 RSS 订阅，我容易么我…………</p>
  </li>
</ol>

<h3 id="section-3">国外产品</h3>

<p>国外产品真心很靠谱，比国内的 RSS 订阅做的好多了，大部分都是抄袭 Google Reader，所以使用起来也没有什么违和感（感谢山寨党，爱死你们了）。</p>

<ol>
  <li>
    <p>Feedly</p>

    <p>当然首推 <a href="http://www.feedly.com/">Feedly</a>，具有 iOS 和 Android 的移动版，完美的实现跨平台阅读。使用 Google Reader 账户登录后，自动将所有东西转移到你的账户，以后用还是一样的账户、一样的内容，只是变换了一下网址而已。<a href="http://blog.feedly.com/2013/03/14/google-reader/">这里</a>还有贴心提示，告诉你如何无痛转移阵地。</p>

    <p><img src="http://pikipity.github.com/images/post/feedly.jpg" width="550pt" /></p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>具有 iOS 和 Android 的移动版</li>
          <li>与 Google Reader 可以说是完全无缝结合，无痛啊，真心无痛</li>
        </ul>
      </li>
      <li>
        <p>缺点：</p>

        <ul>
          <li>载入慢，比乌龟爬稍微快一点，但是再慢有我们学校的网速慢么，我不怕，(╯▽╰)</li>
        </ul>
      </li>
      <li>
        <p>推荐指数：♥♥♥♥♥ <strong>还等什么，快去吧，没啥推荐指数，就它了</strong> ♥♥♥♥♥</p>
      </li>
    </ul>
  </li>
  <li>
    <p>NewsBlur</p>

    <p><a href="http://www.newsblur.com/">NewsBlur</a>照搬了 Google Reader 的功能，同样有 Android 和 iOS 手机与平板应用。但是还没开始找“注册”按钮，我就看到了这个。</p>

    <p><img src="http://pikipity.github.com/images/post/newsblur.jpg" width="550pt" /></p>

    <p>俺就是想要个 RSS 订阅，你收俺钱做什么啊，一年24刀，想钱想疯了的混蛋。╭∩╮（︶︿︶）╭∩╮</p>

    <ul>
      <li>优点、缺点：我都没注册，别问我</li>
      <li>推荐指数：高富帅可以看看</li>
    </ul>
  </li>
  <li>
    <p>The old reader</p>

    <p>嗯，那啥，我承认其实是我找到 feedly 以后就松懈了，但是导入 Google Reader 之后出来这么一段，你是要炫耀用你的人多么？</p>

    <p><img src="http://pikipity.github.com/images/post/theoldreader.jpg" width="550pt" /></p>

    <ul>
      <li>
        <p>优点：</p>

        <ul>
          <li>貌似可以直接导入 Google Reader 的导出文件</li>
          <li>界面完全复刻 Google Reader，没有使用的违和感</li>
        </ul>
      </li>
      <li>
        <p>缺点：导入太慢了，35923个人，你以为我在中国世博会啊</p>
      </li>
    </ul>
  </li>
</ol>

<p>最后留张图纪念一下，别了，Google Reader，一路走好</p>

<p><img src="http://pikipity.github.com/images/post/googlereader.jpg" width="650pt" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[向 Github 添加 SSH 公匙]]></title>
    <link href="http://pikipity.github.com/blog/ssh-public-key.html"/>
    <updated>2013-03-12T20:03:00+08:00</updated>
    <id>http://pikipity.github.com/blog/ssh-public-key</id>
    <content type="html"><![CDATA[<p>今天用 octopress 遇到一点小问题，在向 Github 发布自己的 post 的时候出现错误：</p>

<pre><code>Permission denied (publickey). fatal: The remote end hung up unexpectedly
</code></pre>

<p>看到 publickey，我突然想到我好想忘了向 Github 添加我自己的公匙了，问了一下谷姐，看到<a href="http://stackoverflow.com/questions/3617113/github-newbie-problems-permission-denied-publickey-fatal-the-remote-end">这里</a>的解答，果然是这个原因。我想如果重新设定一下 octopress 的github 登陆设置应该也是可以的，但是如果每次重启电脑都要这样来一次也太麻烦了，于是果断还是去添加一次吧，一劳永逸（最好还是先到<a href="https://help.github.com/articles/error-permission-denied-publickey">这里</a>按照步骤检查一下）。</p>

<p>Mac 设置方法见<a href="https://help.github.com/articles/generating-ssh-keys#platform-mac">这里</a>，Windows 设置方法见<a href="https://help.github.com/articles/generating-ssh-keys#platform-windows">这里</a>（Windows 需要在 Git Bash 里使用下面的命令），Linux 见<a href="https://help.github.com/articles/generating-ssh-keys#platform-linux">这里</a>，三者大同小异，唯一的区别应该就是复制 ssh key 的时候使用的命令不一样吧。步骤如下：</p>

<ol>
  <li>
    <p>检查是否存在 .ssh 文件夹</p>

    <pre><code> $ cd ~/.ssh
</code></pre>

    <p>如果没有这个文件夹，跳到第三步，如果有，则继续</p>
  </li>
  <li>
    <p>备份一下当前已有的 ssh 秘钥</p>

    <pre><code> $ ls
 $ mkdir key_backup
 $ cp id_rsa* key_backup
 $ rm id_rsa*
</code></pre>
  </li>
  <li>
    <p>产生新的 ssh 秘钥</p>

    <pre><code> $ ssh-keygen -t rsa -C "your_email@example.com"
</code></pre>

    <p>“your_email@example.com”就是github上你用来上传的邮箱，如果你没修改过就是你用来注册账户的那个邮箱，输入上面的命令并回车后会引导你生成你的 RSA 秘钥对，如下：</p>

    <pre><code> Enter file in which to save the key (/Users/you/.ssh/id_rsa): [按回车]
 Enter passphrase (empty for no passphrase): [输入一个通关密语]
 Enter same passphrase again: [把通关密语再输一遍]
</code></pre>

    <p>通关密语一般建议输入一个10到30字元的字符串（别输中文），这关系到你将来传输信息的保密性。成功后你会看到<strong>如</strong>下内容</p>

    <pre><code> Your identification has been saved in /Users/you/.ssh/id_rsa.
 Your public key has been saved in /Users/you/.ssh/id_rsa.pub.
 The key fingerprint is:
 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@example.com
</code></pre>
  </li>
  <li>
    <p>将我们的 ssh 秘钥添加到 Github。首先复制我们的公匙，Mac 用下面的命令：</p>

    <pre><code> $ pbcopy &lt; ~/.ssh/id_rsa.pub
</code></pre>

    <p>Linux 用下面的命令（如果没有 xclip，先安装一下吧，很好用，<code>sudo apt-get install xclip</code>）：</p>

    <pre><code> $ xclip -sel clip &lt; ~/.ssh/id_rsa.pub
</code></pre>

    <p>Windows 用下面的命令：</p>

    <pre><code> $ clip &lt; ~/.ssh/id_rsa.pub
</code></pre>

    <p>然后就是到 Github 网站把公匙粘贴过去。步骤如下：</p>

    <ul>
      <li>
        <p>到你的<a href="https://github.com/settings">账户设定</a>中</p>

        <p><img src="https://github-images.s3.amazonaws.com/help/userbar-account-settings.png" width="350pt" /></p>
      </li>
      <li>
        <p>点击左栏中的 <a href="https://github.com/settings/ssh">“SSH Keys”</a></p>

        <p><img src="https://github-images.s3.amazonaws.com/help/settings-sidebar-ssh-keys.png" width="350pt" /></p>
      </li>
      <li>
        <p>点击 “Add SSH key”</p>

        <p><img src="https://github-images.s3.amazonaws.com/help/ssh-add-ssh-key.png" width="350pt" /></p>
      </li>
      <li>
        <p>在 “Key” 的输入框中粘贴</p>

        <p><img src="https://github-images.s3.amazonaws.com/help/ssh-key-paste.png" width="350pt" /></p>
      </li>
      <li>
        <p>点击 “Add key”</p>
      </li>
    </ul>
  </li>
  <li>
    <p>现在你可以测试一下了，用下面命令</p>

    <pre><code> $ ssh -T git@github.com
</code></pre>

    <p>你会得到下面信息：</p>

    <pre><code> The authenticity of host 'github.com (207.97.227.239)' can't be established.
 RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
 Are you sure you want to continue connecting (yes/no)?
</code></pre>

    <p>输入 “yes”，回车，你会看到下面信息：</p>

    <pre><code> Hi username! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

    <p>如果 “username” 正确，那么就 OK 了。</p>
  </li>
</ol>

<p>如果你看到 “access denied”，请考虑使用 <a href="https://help.github.com/articles/set-up-git">HTTPS</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[单片机原理及程序设计 第五章 中断]]></title>
    <link href="http://pikipity.github.com/blog/scm-priciple-5.html"/>
    <updated>2013-03-12T18:18:00+08:00</updated>
    <id>http://pikipity.github.com/blog/scm-priciple-5</id>
    <content type="html"><![CDATA[<p>中断是单片机中一个非常重要的服务。中断是指由于接收到外围硬件的异步信号或是软件的同步信号，而进行的相应的软件或是硬件上的处理。发出这样的信号被称为中断请求，发出中断请求的硬件或是软件被称为中断源。当中断源产生了中断请求，相应的中断旗标（就是对应的寄存器的一个 bit）便会置“1”，8051的 CPU 每个机械周期里都会去检查这些中断旗标，若发现中断旗标置“1”，CPU便会在执行完当前指令后，将当前的执行状态（以程序计数器和程序状态字等寄存器信息为主）塞入堆叠中保存，然后跳到相应的程序内存地址（这个程序内存地址叫做中断向量）执行那里的中断副程序，直到执行到 “RETI” 指令后结束附程序，将塞入堆叠的执行状态取出，回到之前的主程序继续执行。</p>

<h3 id="section">中断分类</h3>

<p>8051中的中断可分为2两种：</p>

<ol>
  <li>不可屏蔽中断：无法通过在中断屏蔽寄存器中设定位掩码来关闭，典型例子是时钟中断（时钟中断不是指的计时/计数器 Timer0 或是 Timer1，而是一个硬件时钟，其会以恒定频率，如12MHz，发出中断）。</li>
  <li>可屏蔽中断：可通过在中断屏蔽寄存器中设定位掩码来关闭。</li>
</ol>

<p>不可屏蔽中断无法控制，是单片机工作的基础，所以不作介绍。只介绍可以控制的可屏蔽中断。</p>

<h3 id="section-1">中断源</h3>

<p>8051提供了五个中断源。中断源、中断向量、中断旗标及中断旗标所属寄存器都列在下表中：</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">中断源</th>
      <th style="text-align: center">中断向量</th>
      <th style="text-align: center">中断旗标</th>
      <th style="text-align: center">中断旗标所属寄存器</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">INT0</td>
      <td style="text-align: center">0003H</td>
      <td style="text-align: center">IE0</td>
      <td style="text-align: center">TCON.1</td>
    </tr>
    <tr>
      <td style="text-align: center">Timer0</td>
      <td style="text-align: center">000BH</td>
      <td style="text-align: center">TF0</td>
      <td style="text-align: center">TCON.5</td>
    </tr>
    <tr>
      <td style="text-align: center">INT1</td>
      <td style="text-align: center">0013H</td>
      <td style="text-align: center">IE1</td>
      <td style="text-align: center">TCON.3</td>
    </tr>
    <tr>
      <td style="text-align: center">Timer1</td>
      <td style="text-align: center">001BH</td>
      <td style="text-align: center">TF1</td>
      <td style="text-align: center">TCON.7</td>
    </tr>
    <tr>
      <td style="text-align: center">UART (TXD)</td>
      <td style="text-align: center">0023H</td>
      <td style="text-align: center">TI</td>
      <td style="text-align: center">SCON.1</td>
    </tr>
    <tr>
      <td style="text-align: center">UART (RXD)</td>
      <td style="text-align: center">0023H</td>
      <td style="text-align: center">RI</td>
      <td style="text-align: center">SCON.0</td>
    </tr>
  </tbody>
</table>

<p>具体满足什么条件会产生中断请求会在介绍各个中断源的时候详细介绍。需要注意的就是串列口 UART 的输入输出中断的中断向量都是 0023H，在使用的时候要判断到底是输入还是输出。</p>

<h3 id="section-2">中断置能</h3>

<p>8051在重置之后会关闭所有可屏蔽中断，所以在使用中断之前需要打开需要的中断功能，也就是中断置能。中断功能打开关闭通过中断置能寄存器（IE，地址为 A8H，允许按位寻址）管理。下面是中断置能寄存器各个 bit 的意思（“1”为使能，“0”为关闭）：</p>

<pre><code>EA  --  --  ES  ET1  EX1  ET0  EX0
</code></pre>

<ol>
  <li>EA: 相当于中断的总开关。置“0”就关闭所有中断。置“1”再根据下面的 bit 来看这个中断是否置能。</li>
  <li>ES：串列口（UART）中断使能位。</li>
  <li>ET1：计时/计数器 Timer1 使能</li>
  <li>EX1：外部中断 INT1 使能</li>
  <li>ET0: 计时/计数器 Timer0 使能</li>
  <li>EX0：外部中断 INT0 使能</li>
</ol>

<h3 id="section-3">中断优先级</h3>

<p>当多个中断旗标同时存在时，就会有一个先执行哪个中断向量的问题，8051内置了一个中断优先级，优先级高的先执行，优先级如下（顺序其实是按照中断向量排列的）：</p>

<ol>
  <li>外部中断 INT0</li>
  <li>计时/计数器 Timer0</li>
  <li>外部中断 INT1</li>
  <li>计时/计数器 Timer1</li>
  <li>串列口（UART）</li>
</ol>

<p>8051允许用户设置两层优先级，8051会先执行高层优先级中的中断，同一层中的中断优先顺序则按照上面的排序来进行。两层优先级的归属问题通过中断优先级寄存器（IP，地址为 B8H，允许位元定址）来设定。IP 每一个 bit 代表的意义如下（“1”代表高优先级，“0”代表低优先级）：</p>

<pre><code>--  --  --  PS  PT1  PX1  PT0  PX0
</code></pre>

<ol>
  <li>PS：串列口（UART）优先级</li>
  <li>PT1：计时/计数器 Timer1 优先级</li>
  <li>PX1：外部中断 INT1 优先级</li>
  <li>PT0: 计时/计数器 Timer0 优先级</li>
  <li>PX0：外部中断 INT0 优先级</li>
</ol>

<h3 id="assembly-">Assembly 程序设计</h3>

<p>一个需要使用中断的 Assembly 程序设计的时候需要注意以下几点：</p>

<ol>
  <li>
    <p>由于中断向量都在程序记忆体的开始部分，所以主程序要注意回避中断向量的位置，所以一开始一般通过一个跳跃跳到主程序，例如</p>

    <pre><code>     ORG 00H
     JMP MAIN
        .
        .
        .
	     
     ORG 30H
 MAIN:
        .
        .
        .
     END
</code></pre>
  </li>
  <li>
    <p>两个中断向量之间的空间很短，一般无法放下整个附程序，所以一般在中断向量处通过一个跳跃到其他位置来执行副程序，例如</p>

    <pre><code>     ORG 00H
     JMP MAIN
	
     ORG 03H
     JMP INT0
	
     ORG 0BH
     JMP TIMER0
	    
     ORG 30H
 INT0:
        .
        .
        .
     RETI
	    
 TIMER0:
         .
         .
         .
      RETI
        
MAIN:
       .
       .
       .
     END    
</code></pre>
  </li>
  <li>ORG 声明程序内存地址的时候要按照程序内存的顺序摆放，比如不可以出现 <code>ORG 05H</code> 在 <code>ORG 03H</code> 前面的情况</li>
  <li>在执行中断副程序之前记得保存之间需要保护的变量（填入堆叠就可以了）。结束之后记得把保护的变量提取出来。</li>
  <li>有的时候再执行一个中断的时候不希望其他中断来打扰，记得在执行中断副程序之前关闭中断（ <code>CLR EA</code> ），在执行结束后记得打开中断（ <code>SETB EA</code>）。</li>
  <li>在执行一个中断副程序的时候，如果其中断旗标再次置起，不会重新跳回中断向量。</li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[别说你知道超级玛丽]]></title>
    <link href="http://pikipity.github.com/blog/super-mario.html"/>
    <updated>2013-03-09T20:02:00+08:00</updated>
    <id>http://pikipity.github.com/blog/super-mario</id>
    <content type="html"><![CDATA[<p>其实超级玛丽是武当出身，使得一手的好梯云纵……</p>

<embed src="http://player.ku6.com/refer/j9ROVzCQYS2Xu4g7rTk1MQ../v.swf" width="480" height="400" allowscriptaccess="always" allowfullscreen="true" type="application/x-shockwave-flash" flashvars="from=ku6" />

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[到底有多大？来见识“三星共和国”的另一面]]></title>
    <link href="http://pikipity.github.com/blog/samsung-kindom.html"/>
    <updated>2013-03-08T16:49:00+08:00</updated>
    <id>http://pikipity.github.com/blog/samsung-kindom</id>
    <content type="html"><![CDATA[<p>转自 <a href="http://www.cnbeta.com/index.php">“中文业界资讯站”</a>，原文在<a href="http://www.cnbeta.com/articles/228672.htm">这里</a>。</p>

<p>三星有多大？每次看到新闻上说苹果要被三星超越了，总会让人想到这个问题。虽然维基百科、百度百科还有三星官网上都有不同的解答，而且还有三星财报可以看，但是看文字多没意思。同行泡泡网就此在网上搜索了一番，越搜越感觉这简直就是个坑啊。</p>

<p>从建筑搜到了军事，又从军事搜到了化工，然后从化工搜到了金融，又从金融搜到了时尚，甚至还搜到了游乐场和医院，到处都可以看到三星的影子。这个时候我们应该明白做为宇宙第一强国思密达族人的心情了，这哪是大韩民国啊？这就是三星大韩共和国。</p>

<p>今天就让我们抛开三星的电子产品，看看在消费电子领域已经排名世界第一、世界500强排名第20位的三星电子之外，三星到底有多大。</p>

<p>三星是怎样发迹的？大家就不必说啥市场经济优胜劣汰了，这里是东亚，儒家思想还是有根基的，所以三星的发迹很类似当年的红顶商人。</p>

<p>1938年，李秉喆创建三星，并在日本侵略和朝鲜战争中得到了李承晚政权的扶持，并由此走上了快速发展的道路。</p>

<p>1961年，朴正熙发动政变干掉了李承晚之后，觉得应该摆脱美帝的控制，让韩国也成为一个制造业强国。于是就选择了三星、现代、大宇等几家之前与李承晚颇有渊源的企业，并摒弃了之前的称政治因素。韩国经济，由此开始腾飞，而朴正熙也一手缔造了“汉江奇迹”，三星、现代、大宇、LG、海力士等等，开始与日本企业并驾齐驱。嗯，前天刚上任的韩国总统朴槿惠，就是朴正熙的女儿。</p>

<p>而李秉喆的儿子李健熙在接手三星之后，也充分利用政治的庇佑，比如2008年就曾有报道，三星内部存在一个2亿美元的贿赂基金，专门用来打点政府官员，于是你看看上面这张图，当三星掌门李健熙步入会场之后，李明博总统温顺地低下了头。</p>

<p>你说，三星有多大？下面我们就来欣赏一下小弟这几天在网上搜到的图片。再强调一点，不包括三星电子哦，我们只看三星的另一面。</p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008010479808576.jpg" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10080112123076784.jpg" alt="三星物产，2011年世界五百强排名第492名" width="550pt" /></p>

<!--more-->

<p><img src="http://pikipity.github.com/images/post/samsung/10080121994090317.jpg" alt="台北101，台湾本地人的念法是101，不是咱们说的幺零幺" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008013661729490.jpg" alt="迪拜哈里法塔" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008014816964185.jpg" alt="除了这个核电站之外，三星物产还拿下了阿联酋阿布扎比Shuweihat 电力公司的S2建造订单" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008025248814449.jpg" alt="三星重工，以造船、太阳能、风能和发电厂建设为主。其中造船是最大的一块业务。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008026411133697.jpg" alt="三星造船厂是当前全球订单数量最多的造船厂之一。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008027723092110.jpg" alt="三星重工在山东威海和浙江宁波，均有造船厂。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10080281334628196.jpg" alt="三星TECHWIN，三星下属这个公司的产品线，算的上是距离老百姓最遥远的了。从安防监控，再到坦克火炮，最后还有航空服务。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/1008029637653742.jpg" alt="装甲车和自行火炮，是三星TECHWIN的招牌产品。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10080210369955372.jpg" alt="三星K9自行榴弹炮，据称是当前世界上最先进的自行榴弹炮。只是，在延坪岛炮战中，貌似韩国军队装备的这货出了故障，搞得被朝鲜火炮狠揍了一顿。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/100802111000979522.jpg" alt="有点模仿俄罗斯雅克130的味道。当然天朝L15教练机也是模仿的雅克130。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/100803121673665418.jpg" alt="这个真不错，有点西科斯基的海王直升机的感觉。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10080313730193648.jpg" alt="三星TECHWIN的航空服务，机队机型非常齐全。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/100803141641805330.jpg" alt="直升机、公务机，各种机型一应俱全。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101112151468661597.jpg" alt="当然也少不了波音、空客这样的大飞机。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101112161276175383.jpg" alt="当初李健熙觉得汽车才是集科技成果于大成的产品，于是组建了三星汽车。只是，面对丰田、通用、大众这样的对手，甚至在面对大宇、现代这样的对手时，三星汽车还是有点资历尚浅。最终，雷诺收购了三星汽车70%的股份，成立了雷诺三星汽车。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10111217859015335.jpg" alt="虽然雷诺占据主导位置，但是三星要想收回这些股份，可以说是易如反掌吧。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101112181522279939.jpg" alt="三星Q5，就是雷诺科雷傲的韩国版本。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10111219595613773.jpg" alt="三星SM7，同时销售的还有三星SM3、SM5，总计三款车型。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101112201827578774.jpg" alt="三星的化工企业，更加庞杂。从我们喝水的杯子，到我们吃药的胶囊，甚至还有农业用的化肥，统统都在三星化工的生产范畴之内。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101421211430894886.jpg" alt="除了自己的研发，三星化工还联手了道达尔、BP等公司，成立了三星道达尔、三星BP等公司，与三星自己的三星精密化工、三星石油化工等，共同组成了三星化工帝国。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10142122229992146.jpg" alt="三星化工的产品线，几乎涵盖了当前全世界所有的工农业领域，由此我们也可看出三星化工的实力。" width="550pt" /></p>

<p><img src="http://photocdn.sohu.com/20130306/Img367932586.jpeg" alt="这几天在网上有一篇名为《亚洲九大权势美貌富婆》八卦文中，有韩国第一毛织董事长李叙显的介绍。那，李叙显是谁呢？她就是三星掌门李健熙的女儿。而第一毛织，则是三星旗下韩国最大的服装厂商。旗下BEAN POLE更是一款流行世界的市场品牌。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10145224540117087.jpg" alt="这几个明星，看海报上写的，是2IN1，只熟悉硬盘里那几部电影的小弟我不认识哈。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10145225240788886.jpg" alt="米帅也代言BEAN POLE了，上面那个花样美男是谁？长的挺俊俏！" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101452261849862297.jpg" alt="三星在韩国首尔市中心，拥有一家五星级的酒店，同时也是韩国曾经最豪华的酒店，这就是三星首尔新罗酒店。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101452271114465686.jpg" alt="除了在首尔，三星在韩国旅游胜地济州岛也拥有一间新罗酒店。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101452282129990328.jpg" alt="近年来新罗酒店走出韩国，例如在苏州就开办了金鸡湖新罗酒店。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10145229517305127.jpg" alt="三星爱宝乐园，据说是亚洲第四韩国第一，号称韩国的迪斯尼。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/10145230247394712.jpg" alt="好像花市一样，似乎在努力营造一种童话的感觉。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101801311358926914.jpg" alt="说句实话，这游乐园不要说跟迪斯尼比了，就连深圳的欢乐谷都差太远。几盆花、光秃秃的山，弄个摩天轮，这跟县城的市民文化广场倒是差不多。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101801321691395429.jpg" alt="当然，我上一页只是看图说话哈，这是三星爱宝乐园的导游图，有兴趣的玩家可以去韩国京畿道龙仁市体验一把。" width="550pt" /></p>

<p><img src="http://pikipity.github.com/images/post/samsung/101801331823035907.jpg" width="550pt" /></p>

<p>除了上面我们介绍的，三星还有很多产业，但是限于篇幅，我也就懒得再去搜图片了。知道一点就好了，在世界500强的企业中，数码科技类的企业排名最高的就是三星电子，位列第20名，而其后的富士康位列43，苹果更是只列第55名。其他方面，三星生命保险，排名274，而三星物产，排名492。</p>

<p>看完了三星的另一面，估计你会明白为什么华盛顿邮报当年会写出“韩国三星共和国”这样标题的文章。嗯，多看另一面，总会有发现。就像我们现在看微博，朴槿惠被说是独裁者的女儿，但是却没人去说朴正熙所创造的“汉江奇迹”。当然，朴正熙掌权韩国18年，也确实长了点，但总比某些世袭好多了吧？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[单片机原理及程序设计 第四章 汇编语言]]></title>
    <link href="http://pikipity.github.com/blog/assembly-language.html"/>
    <updated>2013-03-07T20:39:00+08:00</updated>
    <id>http://pikipity.github.com/blog/assembly-language</id>
    <content type="html"><![CDATA[<p>学习汇编语言可以很好地帮助单片机的学习，而且一个好的汇编语言写成的程序要比实现相同功能的 C 语言更短更快。但是难以理解，移植性差，所以现在一般都用 C 语言来为单片机编程，只有部分硬件的驱动或是 C 语言难以控制的部分来用汇编编写。</p>

<h2 id="section">汇编指令分类</h2>

<p>汇编语言中的指令分为两大部分：</p>

<ol>
  <li>指令（Instruction）：指令会被编译器编译为机器语言将来提供给单片机。指令的数量很有限，不像 C 语言，内置函数就一堆，所以用到什么查表就可以了，表格会在后面提供。</li>
  <li>伪指令（Directive）：伪指令不会被编译器编译为机器语言，仅仅是提供给编译器，为了“编译”而存在的指令。</li>
</ol>

<h2 id="section-1">汇编语言格式</h2>

<p>任何编程语言都有格式，汇编语言也不例外，格式如下：</p>

<pre><code>标记: 操作码 操作数  ;注释
</code></pre>

<p>标记不是每一行都有，需要的时候有就可以了，标记是为了方便对程序内存的寻址，冒号是和标记一起存在的。操作码和操作数就是汇编指令，当然必须有。分号与注释一起存在，不会被编译。</p>

<h2 id="section-2">寻址方式</h2>

<p>再给出所有汇编指令表之前先要介绍一下汇编语言的寻址方式，单片机中对数据的操作最常见的就是将数据从内存的一个地方移到另一个地方，在移动的过程中就需要声明内存地址（内存地址是什么？请回到<a href="http://pikipity.github.com/blog/scm-principle-2.html">第二章</a>，谢谢），那么如何获得这个内存地址呢？就是通过“寻址”来获得。8051 的汇编指令只有四种寻址方式：</p>

<ol>
  <li>直接寻址（Direct Addressing，在表格中简写为 Dir）：直接给出一个16进制数，代表资料记忆体的一个字节地址，从这个地址中拿出数据来操作。只能用于内置 RAM</li>
  <li>间接寻址（Indirect Addressing，在表格中简写为 Ind）：一个 “@” 的符号在加一个寄存器的名字，例如 <code>@DPTR</code>，从这个寄存器中拿出数据，把这个数据当做地址，再从这个地址中拿出数据来操作。可对内置和外扩 RAM 使用。</li>
  <li>寄存器寻址（Register Addressing，在表格中简称 Reg）：直接一个寄存器的名字，例如 <code>R0</code>，从寄存器中拿出数据进行操作。仅对寄存器有效。</li>
  <li>立即寻址（Immediate Addressing，在表格中简称 Imm）：一个井号 “#” 再加一个整数，例如 <code>#1011B</code>，直接对这个整数进行操作。</li>
</ol>

<h2 id="section-3">指令表</h2>

<p>为了方便记忆和查询，指令又分为了五类</p>

<ol>
  <li>
    <p>数据移动：数据移动的指令又根据被移动的数据所在位置分为三个部分。</p>

    <ul>
      <li>
        <p>内部 RAM 内数据的移动</p>

        <p><img src="http://pikipity.github.com/images/post/MOV.jpg" width="550pt" /></p>
      </li>
      <li>
        <p>外部 RAM 内数据读取与写入</p>

        <p><img src="http://pikipity.github.com/images/post/MOVX.jpg" width="350pt" /></p>
      </li>
      <li>
        <p>程序内存数据读取</p>

        <p><img src="http://pikipity.github.com/images/post/MOVC.jpg" width="350pt" /></p>
      </li>
    </ul>

    <p>注意：</p>

    <ul>
      <li>Ri 的意思是 R1 或者 R0，不包括 R2 ~ R7</li>
      <li>
        <p>MOV 指令代表一个1 byte 的机器语言，所以它的操作数中不可能同时出现多个寄存器，例如 <code>MOV R0,R1</code> 是错误的，只能是</p>

        <pre><code>MOV A,R1
MOV R0,A
</code></pre>
      </li>
    </ul>
  </li>
  <li>
    <p>计算：</p>

    <p><img src="http://pikipity.github.com/images/post/MATH.jpg" width="550pt" /></p>
  </li>
  <li>
    <p>逻辑运算：</p>

    <p><img src="http://pikipity.github.com/images/post/ANL_A.jpg" width="550pt" /></p>
  </li>
  <li>
    <p>布尔运算和判断：</p>

    <p><img src="http://pikipity.github.com/images/post/ANL_C.jpg" width="350pt" /></p>
  </li>
  <li>
    <p>跳转：</p>

    <p><img src="http://pikipity.github.com/images/post/JUMP_1.jpg" width="550pt" /></p>

    <p><img src="http://pikipity.github.com/images/post/JUMP_2.jpg" width="350pt" /></p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[单片机原理及程序设计 第三章 数据类型与表示方法]]></title>
    <link href="http://pikipity.github.com/blog/scm-principle-3.html"/>
    <updated>2013-03-07T10:36:00+08:00</updated>
    <id>http://pikipity.github.com/blog/scm-principle-3</id>
    <content type="html"><![CDATA[<p>对 8051 的编程本质上就是对一个个二进制数在内存中运算和转移，所以明确各种进制（尤其是二进制、十进制和十六进制）在汇编中的表示方法和它们之间的转换方法就非常重要了。</p>

<h2 id="section">二进制</h2>

<p>无符号二进制的表示方法很简单，只要在你所要表示的二进制数后面加一个 <strong>“B”</strong> 就可以了。例如 <code>1011011B</code>。8位无符号整数范围为 0 ~ 255。16位无符号整数范围为 0 ~ 65535。</p>

<p>表示有符号二进制的时候，一个 Byte 8位中的最高位表示符号，1为负，0为正，后面7位是你要表示的数的绝对值。8位有符号整数范围为 -128 ~ 127。16位有符号整数范围为 -32768 ~ 32767。</p>

<p>当计算有符号二进制数加法的时候（减法只要转换一下加数的符号就变成加法了，所以是一样的），要先将负数变为2补数，然后再相加。所谓<strong>2补数</strong>，就是这个负数的<strong>绝对值</strong>的二进制数的<strong>反数加一</strong>。例如要求-96的2补数，96转换为二进制为01100000，先求反数为10011111，再加一就是-96的2补数10100000</p>

<h2 id="section-1">十进制</h2>

<p>十进制在汇编中的表示很简单，一个单纯的数（例如<code>129</code>）或是一个数字后面加一个 <strong>“D”</strong> （例如<code>129D</code>）就可以了。</p>

<p>从二进制到十进制有一种特殊的转换方法，就是BCD转换方法，先将二进制4位为一部分的分开然后在进行转化，下面的例子展示了如何进行转化。</p>

<p><img src="http://pikipity.github.com/images/post/scm-principle-3_1.jpg" alt="BCD转化举例" width="200pt" /></p>

<p>注意：BCD转化出来的一定是十进制，不要与16进制搞混，虽然看上去一样，但是表示的大小则完全不一样。</p>

<h2 id="section-2">十六进制</h2>

<p>十六进制从0到15分别为 <code>0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F</code></p>

<p>十六进制在汇编中只要在数的后面加一个 <strong>“H”</strong> 就可以了，例如 <code>2FH</code>。</p>

<p>需要注意的是，在汇编中，如果这个16进制数的第一个数就是一个字母的话需要在字母前加一个 <strong>“0”</strong>，例如 <code>0FEH</code>。</p>

<h2 id="section-3">小数</h2>

<p>上面介绍的都是整数，小数的表示则比较复杂。小数分为定点小数和浮点小数。</p>

<h3 id="section-4">定点小数</h3>

<p>定点小数的小数位数是固定的，定点小数表示简单，我们可以随意设定自己这个程序里面小数定点小数的表示方法，比如，我们可以规定我们的小数为8位，小数点前的数为7位，最前面还有一个符号位，那么我们的小数就表示如下图所示：</p>

<p><img src="http://pikipity.github.com/images/post/scm-principle-3_2.jpg" alt="定点小数表示" width="250pt" /></p>

<p>定点小数的好处是表示简单、计算方便。缺点也很明显，无法表示拥有很多的小数位数的数，所以我们需要浮点小数。</p>

<h3 id="section-5">浮点小数</h3>

<p>浮点小数的小数为不固定，而是用科学计数法的方式记录小数，一个浮点小数分为三部分：符号位 S、阶码位 P 和尾数为 M，所标表示意思如下：</p>

<script type="math/tex; mode=display">(-1)^S\times M\times 2^P</script>

<p>浮点小数又分为单精度浮点和双精度浮点：</p>

<ol>
  <li>单精度浮点的阶码为8位，位数为23位，共32位（即四个字节）。</li>
  <li>双精度浮点的阶码为11位，位数为52位，共64位（即八个字节）。</li>
</ol>

<p>由于双精度和单精度除了长度以外都相同，所以这里只介绍单精度，双精度请自行脑补。</p>

<p>单精度浮点数表示格式如下：</p>

<table>
  <tbody>
    <tr>
      <td>S（第31位）</td>
      <td>P（30位到23位）</td>
      <td>M（22为到0位）</td>
    </tr>
  </tbody>
</table>

<p>根据 IEEE 754 的标准，浮点小数有四种特殊情况：</p>

<ol>
  <li>P 和 M 都为全0的时候，表述0</li>
  <li>P 为全0，M 不为全0，是非规范形式</li>
  <li>P 为全1，M 为全0的时候，表示无穷大，符号位确定正负</li>
  <li>P 为全1，M 不为全0的时候，表示“这不是一个数”</li>
</ol>

<p>也就是说，单浮点最大为 <code>0 11111110 11111111111111111111111</code>，也就是 3.40282346638529E+38，最小为 <code>1 11111110 11111111111111111111111</code>，也就是 -3.40282346638529E+38，最接近0的数是 <code>0 00000000 00000000000000000000001</code>，也就是 1.40129846432482E-45。</p>

<h3 id="section-6">二进制单精度浮点小数转化为十进制方法</h3>

<p>将单精度浮点小数转化为十进制比较简单，只要按照对应的部分转化就可以得到对应的十进制数了，转化规律如：</p>

<ol>
  <li>符号位：0为正，1为负。</li>
  <li>阶码位：对应的十进制减127（双浮点减1023）。例如阶码位为 <code>10001010</code> ，那么对应的2的指数就是 $138-127=11$。</li>
  <li>尾数位：在尾数位的最左边补一个1，将小数点放在这个1的后面，进行转化，所得到的就是尾数了。例如，尾数位为 <code>01110101100011100010001</code>，那么对应的尾数就是 $1.4592$</li>
  <li>
    <p>按照公式组合就可以了，这里公式再次给出一边：</p>

<script type="math/tex; mode=display">(-1)^S\times M\times 2^P</script>
  </li>
</ol>

<h3 id="section-7">十进制小数转化为二进制单精度浮点的方法</h3>

<p>将十进制转化为单浮点二进制就比较麻烦了，可以按照下面的方法：</p>

<ol>
  <li>符号位就不说了，主要是计算阶码位和尾数位。首先判断要转化的十进制是不是纯小数（纯小数的意思是无整数部分），如果是就到第三步，如果不是继续到第二步</li>
  <li>
    <p>不是纯小数，就可以把数字分为两部分，整数部分和小数部分，整数部分就按照普通的方法转换就可以了，小数部分可以通过下面的方法转换：</p>

    <p><img src="http://pikipity.github.com/images/post/scm-principle-3_3.jpg" alt="十进制小数部分转化方法" width="350pt" /></p>

    <p>然后将转化出来的二进制数的小数部分和整数部分组合在一起，左移小数点直到整数部分只剩一个1为止，小数部分取左起23位就是尾数位，将小数点移动的位数加127，转化为二进制就是阶码位。</p>
  </li>
  <li>
    <p>如果是纯小数就要先将纯小数转化为 <script type="math/tex">1.\cdots\times 2^n</script> 的形式，可以通过下面的公式转化（公式中 $X$ 代表待转换的十进制纯小数）：</p>

<script type="math/tex; mode=display">n=\mbox{int}(log_2 X-1)</script>

    <p>然后将转化之后的小数部分按照步骤2中方法进行转化，结果取左起23位就是尾数为，$n+127$ 转化为二进制就是阶码位。</p>
  </li>
</ol>

<p>为了方便大家进行二进制、十进制和十六进制之间的转换，我用 Python 编写了一个小程序，下载在<a href="http://pikipity.github.com/Binary-Converter/">这里</a>，如果发现有什么 Bug，欢迎指正，谢谢。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[喂，写日记啦！]]></title>
    <link href="http://pikipity.github.com/blog/ohlife.html"/>
    <updated>2013-03-06T23:53:00+08:00</updated>
    <id>http://pikipity.github.com/blog/ohlife</id>
    <content type="html"><![CDATA[<p>今天推荐一个专门用来记日记的网站 <a href="http://ohlife.com/">“OhLife”</a>。虽然已经有很多的用来记日记、记笔记的网站，但是它们都有一个共病，就是花在研究“怎么用”的时间常常多余“写什么”的时间，而且每次写日记还要到它的网站或是打开客户端，很麻烦。而像人人或是 Facebook 一样的社交网络则面临写的东西别人都会看到的苦恼，想写点私人的东西都很困难。这个网站同时解决了这两个困难，非常好用。</p>

<p><img src="http://pikipity.github.com/images/post/OhLife_1.jpg" width="550pt" /></p>

<p>“OhLife” 有两个刚好弥补上面两大缺点的特点：</p>

<ol>
  <li>操作简单。网站每天会给你指定的邮箱发送一封邮件，你如果要记日记，就把你要记录的内容放在邮件里面，回复给他就可以了，附件就是插图，很方便。每天定时督促，让你养成写日记的好习惯。</li>
  <li>私密。没有公开或是隐私的设置，所有日记均为隐私，要想看日记，需要登录网站，然后登陆用户在可以看见此用户的日记。</li>
</ol>

<p>你的所有日记会在 “OhLife” 网站自动生成一个类似于 Blog 的页面，小清新风格，很漂亮。如果你想将日记转移，一键 “export”，很简单。</p>

<p><img src="http://pikipity.github.com/images/post/OhLife_2.jpg" width="550pt" /></p>

<p>每一篇日记都可以进行再编辑，调整时间、添加照片、修改内容，简单明了。</p>

<p><img src="http://pikipity.github.com/images/post/OhLife_3.jpg" width="550pt" /></p>

<p>“Setting” 里面的内容也极其简单，设置一下你的当地时间、发送提醒邮件的频率、你的邮箱和 “OhLife” 的密码，就这么几个，完全没有上手难度。完全是居家旅行必备良药啊。</p>

<p><img src="http://pikipity.github.com/images/post/OhLife_4.jpg" width="550pt" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[此 “Fate” 非彼 “Fate”]]></title>
    <link href="http://pikipity.github.com/blog/this-fate-is-not-that-fate.html"/>
    <updated>2013-03-05T18:21:00+08:00</updated>
    <id>http://pikipity.github.com/blog/this-fate-is-not-that-fate</id>
    <content type="html"><![CDATA[<p><img src="http://pikipity.github.com/images/post/saber.jpg" alt="Fate/stay night" width="550pt" /></p>

<p>今天要说的不是上边的这个 “Fate”，想看 Saber 酱的请前方左转到<a href="http://pan.baidu.com/share/link?shareid=394298&amp;uk=4080321956">这里</a>围观 Saber。今天要说的是《黑暗史诗》（“Fate”）这个角色扮演类游戏。</p>

<p>《黑暗史诗》不论在 Windows 平台还是在 Linux 或是 Mac 上都很有名。喜欢角色扮演类游戏的玩家一定听说过。虽然模仿《暗黑破坏神》的游戏现在并不少见，但是我认为，这款游戏无疑是最成功的一个。2005年原版上市，现今已有三部资料片。游戏很小，小到只有100多M。但是全3D打造，画面表现绝不亚于很多大手笔大制作。</p>

<p><img src="http://pikipity.github.com/images/post/fate_1.jpg" width="550pt" /></p>

<!--more-->

<p>游戏的主线很简单，要你扮演的角色到地下城的XX层帮他拿回什么东西（具体什么东西我忘记了，记忆力真捉急啊）。你完全可以不去理睬所谓的主线任务，一层一层的下地下城就可以了，每一层的地图都是随机生成的，也就是说，你到这一层100次，这一层就有100幅地图等着你。没到一层，你都可以回到城镇去接任务，任务一样是随机的。就连你的脚色都可以说是随机的，因为没有像《暗黑》那样职业的设定，你可以佩戴所有武器，使用所有魔法，具体你要成为怎么样的地下城勇士，就要看你的加点了，而且加点也不是简单的什么敏捷、体力那么简单，你要选择的是你要精通什么样的技能，比如剑技能或是治疗魔法技能等等。当然宝石镶嵌系统、声望系统、赌博系统，只有你想不到的，没有你做不到的。</p>

<p><img src="http://pikipity.github.com/images/post/fate_2.jpg" width="550pt" /></p>

<p>游戏最大的乐趣就是自己的宠物了，游戏一开始你就可以选择带一只宠物猫或是宠物狗，可以帮你打怪或是帮你运东西回城去买，这只不过是队友而已（卖队友什么的最开心了），乐趣是当你在池塘钓了鱼再喂给自己宠物吃，看着它变成怪物跟着你跑来跑去的时候很是快乐啊。在游戏中，一般最开始就会去商店买一个钓竿，到池塘钓鱼咱装备和钱，池塘中会吊起各种各样的东西，从装备到宝石再到具有各种各样效果加成的鱼什么都有。鱼的变身效果大部分是一段时间就会消失的，还有很小一部分是永久的，永久的变身一般都很帅或是很奇葩的。这里有一个<a href="http://arch.pcgames.com.cn/pcgames/gl/h/0507/696458.html">钓鱼必中法</a>，呵呵，大侠，你懂得。</p>

<p><img src="http://pikipity.github.com/images/post/fate_3.jpg" width="550pt" /></p>

<p>大家看到这里一定都想起了另外一款游戏《火炬之光》，除了画质更加精良，主线任务更加完善以外，其他几乎完全一样。其实《火炬之光》的项目主管就是《黑暗史诗》的制作人之一，所以不一样才奇怪呢。</p>

<p><img src="http://pikipity.github.com/images/post/touchlight.jpg" width="550pt" /></p>

<p>其实，我在电脑上安装这两款游戏，纯粹是玩腻了字符的地下城游戏<a href="http://crawl.chaosforge.org/Crawl_Wiki">《Dungeon Crawl of Stone soup》</a>，想找个图形化界面玩一玩，结果没有找到就来玩这两个了。《Dungeon Crawl of Stone soup》还是很好玩的，但是上手难度太高了，首先你要习惯他的画面，全字符（就像是回到了那个只有 DOS 的远古时代一样），然后是操作，你要记住所有按键，最后是信息量，就那些各种各样的“神”的属性加成和性格特点就够研究上很多天的，更不用说种族特性、武器特性、怪物特性等等，完全是喜欢折腾的人居家旅行必备“良药”啊，很治愈呢。玩儿完《Dungeon Crawl of Stone soup》你就明白什么叫活着真难，所有角色只有一条命，刚开始，新手常常是饿死在第三层（谁叫你不选可爱的食尸鬼），然后就是重新建人物，重新开始，10多次饿死在同一层之后发现，以后再也不敢去那一层了，因为那一层全都是你前面人物的灵魂（你要是选的召唤师，呵呵，灵魂召唤怪物围死你）在飘来飘去追着你打。在《Dungeon Crawl of Stone soup》中，你需要面对一个冒险者真的会遇到的很多琐碎的问题，这才是真正的“龙与地下城”的冒险。</p>

<p><img src="http://pikipity.github.com/images/post/Crawl.jpg" width="550pt" /></p>

<p>最后是下载地址：</p>

<ol>
  <li><a href="http://crawl.develz.org/wordpress/downloads">Dungeon Crawl of Stone soup</a></li>
  <li><a href="http://pan.baidu.com/share/link?shareid=393536&amp;uk=4080321956">《黑暗史诗》（Fate）Mac版</a></li>
  <li><a href="http://www.gamersky.com/Soft/200808/15447.shtml">《黑暗史诗》(Fate) Windows版</a></li>
  <li><a href="http://pan.baidu.com/share/link?shareid=393478&amp;uk=4080321956">《火炬之光(一)》Mac版</a></li>
  <li><a href="http://bbs.maiyadi.com/thread-877042-1-1.html">《火炬之光（二）》Mac版</a></li>
  <li><a href="http://www.gamersky.com/Soft/201209/39814.shtml">《火炬之光（二）》Windows版</a></li>
</ol>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于“红酒”的那点事]]></title>
    <link href="http://pikipity.github.com/blog/wine.html"/>
    <updated>2013-03-04T19:45:00+08:00</updated>
    <id>http://pikipity.github.com/blog/wine</id>
    <content type="html"><![CDATA[<p>这一篇当然不是介绍真的红酒了，而是一个允许 Linux 和 Mac 系统运行 Windows 的软件。</p>

<p>“Wine” 是 “Wine Is Not an Emulator” 的缩写。从全称上就可以看出 “Wine” 的想法并不是像虚拟机或是模拟器那样模仿一个 Windows 的逻辑来运行软件。而是将 Windows API 翻译成动态 <a href="http://zh.wikipedia.org/wiki/POSIX">POSIX</a> 来调用，说得简单一点，就是将 Windows 的程序变为原生的 Linux 或是 Mac（实际是类 Unix）程序，这样就避免了虚拟机或是模拟器那样大量的内存占用，并能让 Windows 程序比较干净的整合到你的类 Unix 系统中。</p>

<!--more-->

<p>看了上面的介绍，你可能会问了，这么好的东西为什么大家不用，都去用 “VirtualBox” 或是 “Parallel Desk” 那样的虚拟机呢？我认为，原因很简单，“Wine”并不是很易用。正如上面提到的，Wine 是将 Windows 的 API 之间转换为 POSIX，但是并不能保证这个转换一定是正确的、可用的。很多软件在 Wine上的运行都会出现一些很奇怪的问题，比如突然一个窗口啦，标题错位啦，明明打开了但是鼠标不见啦等等问题，而这些问题往往不是一个外行可以通过度娘或是谷姐就能解决的。需要到官网报告 Bug，然后等待下一次的更新来修正这个错误。而且常常这一个 Wine 的版本可以正常运行的软件，下个版本就无法正常运行了，于是各种苦恼、各种无奈。</p>

<p>而且 Windows 公司虽然没有明确表示抵制 Wine 计划，但是却一直都在阻挠 Wine 计划。不时的出一出更新，说是防止盗版，但是就是阻止 Wine 用户更新程序。也是，由于 Wine 本身是开源、自由的软件，大多数使用者在 Wine上使用的软件也都是盗版，这也无怪乎 Windows 公司不断地阻挠了。</p>

<p>大家可以到<a href="http://wiki.winehq.org/">这里</a>看 Wine 的Wiki，虽然打开是中文的，但是大部分有营养的东西还是英文的，当个中国人难，当个喜欢折腾的中国人更难。</p>

<p>Linux 用户可以到<a href="http://www.winehq.org/download/">这里</a>下载，或是直接用自己系统自带的包管理器下载并安装。Mac用户就比较麻烦了，由于 Wine 没有提供官方的 Mac 安装包，所以只能用第三方的了，而且那些装着 PowerPc 的老 Mac 无法使用，只有 Intel Mac 可以使用。你可以使用MacPorts 或是 Homebrew 来下载 Wine 的源码并编译安装，具体做法<a href="http://www.iiiphone.com/blog/read.php/39.htm">这里</a>有写，你也可以到下载<a href="http://winebottler.kronenberg.org/">WineBotter</a>，这个的安装是图形化的，很方便，并且管理 Wine 的软件也比较方便。</p>

<p>具体的使用可以看 <a href="http://linfan.info/blog/2012/03/01/wine-mac/">“linfan’s blog”</a>，强烈建议在安装任何软件之前到 <a href="http://appdb.winehq.org/">AppDB</a> 里来看看别人的测试结果。</p>

<p>最后补充一点，高富帅们可以考虑购买 <a href="http://www.codeweavers.com/products/">CodeWeavers</a> 据说极其稳定的好用。</p>

<p>最后的最后，赠送给大家一个 Wine 的游戏 – <a href="http://pan.baidu.com/share/link?shareid=393478&amp;uk=4080321956">《火炬之光（一）》</a>。谢谢。</p>

<p><img src="http://pikipity.github.com/images/post/wine-software.png" width="550pt" /></p>
]]></content>
  </entry>
  
</feed>
